"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_pages-dir-browser_src_components_ChartComponent_js",{

/***/ "(pages-dir-browser)/./src/components/ChartComponent.js":
/*!******************************************!*\
  !*** ./src/components/ChartComponent.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lightweight_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightweight-charts */ \"(pages-dir-browser)/./node_modules/lightweight-charts/dist/lightweight-charts.development.mjs\");\n/* harmony import */ var _barrel_optimize_names_Activity_ArrowDown_ArrowUp_Clock_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Activity,ArrowDown,ArrowUp,Clock,X!=!lucide-react */ \"(pages-dir-browser)/__barrel_optimize__?names=Activity,ArrowDown,ArrowUp,Clock,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n// Add helper function for formatting price values consistently\nconst formatPrice = (price, pair)=>{\n    if (price === null || price === undefined) return '';\n    const precision = pair.includes('JPY') ? 3 : 5;\n    return price.toFixed(precision);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/_c1 = _s((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(_c = _s((param, ref)=>{\n    let { pair, timeframe, externalTrades } = param;\n    _s();\n    // First, ensure all references are initialized at the component top level\n    // to avoid \"Cannot access uninitialized variable\" errors\n    // Define refs first - before any functions that might use them\n    const chartContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const candlestickSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const volumeSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const priceLabelRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const markerSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const resizeObserverRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const timerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const updateIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const isMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(true);\n    const isFetchingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const chartInitializedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const isRetryingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const containerReadyRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const tradesContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Define state variables next\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [currentPrice, setCurrentPrice] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [priceChangePositive, setPriceChangePositive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [lastUpdateTime, setLastUpdateTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [trades, setTrades] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isFetchingTrades, setIsFetchingTrades] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Define utility functions before they're used\n    const cleanupTimersAndIntervals = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[cleanupTimersAndIntervals]\": ()=>{\n            if (timerRef.current) {\n                clearTimeout(timerRef.current);\n                timerRef.current = null;\n            }\n            if (updateIntervalRef.current) {\n                clearInterval(updateIntervalRef.current);\n                updateIntervalRef.current = null;\n            }\n            if (resizeObserverRef.current) {\n                resizeObserverRef.current.disconnect();\n                resizeObserverRef.current = null;\n            }\n        }\n    }[\"useCallback[cleanupTimersAndIntervals]\"], []);\n    const cleanupChart = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[cleanupChart]\": ()=>{\n            if (chartRef.current) {\n                try {\n                    chartRef.current.remove();\n                    console.log(\"Chart removed successfully\");\n                } catch (err) {\n                    console.error(\"Error removing chart:\", err);\n                }\n                chartRef.current = null;\n                candlestickSeriesRef.current = null;\n                volumeSeriesRef.current = null;\n                priceLabelRef.current = null;\n            }\n        }\n    }[\"useCallback[cleanupChart]\"], []);\n    // Function to update the chart with current price and its relation to trade targets\n    const updateCurrentPriceIndicator = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[updateCurrentPriceIndicator]\": (price)=>{\n            if (!chartRef.current || !candlestickSeriesRef.current) return;\n            if (priceLabelRef.current) {\n                try {\n                    priceLabelRef.current.applyOptions({\n                        price,\n                        title: \"Live: \".concat(formatPrice(price, pair)),\n                        axisLabelVisible: true\n                    });\n                } catch (err) {\n                    console.error(\"Error updating price line:\", err);\n                }\n            }\n        // We've removed the trade progress indicator UI, so we don't need to calculate\n        // progress percentages toward targets anymore. Just let the price lines show visually\n        // where the entry, SL and TP levels are on the chart.\n        }\n    }[\"useCallback[updateCurrentPriceIndicator]\"], [\n        pair\n    ]);\n    // Define fetchCandleData before handleRetry to avoid circular reference\n    const fetchCandleData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[fetchCandleData]\": ()=>{\n            // Skip if already fetching\n            if (isFetchingRef.current || !isMountedRef.current) {\n                console.log(\"Fetch already in progress or component unmounted, skipping\");\n                return Promise.resolve();\n            }\n            // Skip if no chart reference exists\n            if (!chartRef.current || !candlestickSeriesRef.current) {\n                console.log(\"Chart references not available, skipping data fetch\");\n                return Promise.resolve();\n            }\n            console.log(\"Fetching candle data for \".concat(pair, \"/\").concat(timeframe));\n            isFetchingRef.current = true;\n            return fetch(\"/api/candles?pair=\".concat(pair, \"&timeframe=\").concat(timeframe, \"&_=\").concat(Date.now()), {\n                headers: {\n                    'Cache-Control': 'no-cache, no-store',\n                    'Pragma': 'no-cache'\n                }\n            }).then({\n                \"useCallback[fetchCandleData]\": (response)=>{\n                    if (!response.ok) {\n                        throw new Error(\"API error: \".concat(response.status));\n                    }\n                    return response.json();\n                }\n            }[\"useCallback[fetchCandleData]\"]).then({\n                \"useCallback[fetchCandleData]\": (data)=>{\n                    var _data_candles;\n                    // Check if component still mounted and references valid\n                    if (!isMountedRef.current || !chartRef.current || !candlestickSeriesRef.current) {\n                        console.log(\"Component unmounted or references lost during fetch\");\n                        return;\n                    }\n                    console.log(\"Received \".concat(((_data_candles = data.candles) === null || _data_candles === void 0 ? void 0 : _data_candles.length) || 0, \" candles\"));\n                    if (!data.candles || !Array.isArray(data.candles) || data.candles.length === 0) {\n                        throw new Error('No valid candle data received');\n                    }\n                    // Format candle data safely\n                    const candleData = data.candles.filter({\n                        \"useCallback[fetchCandleData].candleData\": (candle)=>candle && typeof candle.time === 'number'\n                    }[\"useCallback[fetchCandleData].candleData\"]).map({\n                        \"useCallback[fetchCandleData].candleData\": (candle)=>({\n                                time: candle.time,\n                                open: Number(candle.o) || 0,\n                                high: Number(candle.h) || 0,\n                                low: Number(candle.l) || 0,\n                                close: Number(candle.c) || 0\n                            })\n                    }[\"useCallback[fetchCandleData].candleData\"]);\n                    if (candleData.length === 0) {\n                        throw new Error('No valid candles after filtering');\n                    }\n                    // Set the data\n                    candlestickSeriesRef.current.setData(candleData);\n                    // Update price if available\n                    if (data.currentPrice !== undefined) {\n                        const numericPrice = Number(data.currentPrice);\n                        if (!isNaN(numericPrice)) {\n                            // Determine price direction\n                            if (currentPrice !== null) {\n                                setPriceChangePositive(numericPrice >= currentPrice);\n                            }\n                            setCurrentPrice(numericPrice);\n                            // Update price line and trade progress indicators\n                            updateCurrentPriceIndicator(numericPrice);\n                        }\n                    }\n                    // Fit content\n                    try {\n                        chartRef.current.timeScale().fitContent();\n                    } catch (err) {\n                        console.error(\"Error fitting chart content:\", err);\n                    }\n                    // Update last update time\n                    setLastUpdateTime(new Date());\n                    setIsLoading(false);\n                    setError(null);\n                    // Ensure chart is showing appropriate price range\n                    try {\n                        // Adjust the visible range to ensure we see enough price levels\n                        const visibleRange = chartRef.current.timeScale().getVisibleRange();\n                        if (visibleRange) {\n                            const priceScale = chartRef.current.priceScale('right');\n                            if (priceScale) {\n                                // Force price scale update\n                                priceScale.applyOptions({\n                                    autoScale: true,\n                                    mode: 0,\n                                    ticksVisible: true,\n                                    scaleMargins: {\n                                        top: 0.1,\n                                        bottom: 0.1\n                                    }\n                                });\n                            }\n                        }\n                        // Fit content with animation\n                        chartRef.current.timeScale().fitContent();\n                    } catch (err) {\n                        console.error(\"Error adjusting price scale:\", err);\n                    }\n                    return data;\n                }\n            }[\"useCallback[fetchCandleData]\"]).catch({\n                \"useCallback[fetchCandleData]\": (error)=>{\n                    console.error('Error fetching candle data:', error);\n                    if (isMountedRef.current) {\n                        setError(\"Failed to load data: \".concat(error.message));\n                        setIsLoading(false);\n                    }\n                    return null;\n                }\n            }[\"useCallback[fetchCandleData]\"]).finally({\n                \"useCallback[fetchCandleData]\": ()=>{\n                    isFetchingRef.current = false;\n                }\n            }[\"useCallback[fetchCandleData]\"]);\n        }\n    }[\"useCallback[fetchCandleData]\"], [\n        pair,\n        timeframe,\n        currentPrice\n    ]);\n    // Define fetchTrades function to get trade data\n    const fetchTrades = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[fetchTrades]\": ()=>{\n            if (isFetchingTrades || !isMountedRef.current) {\n                console.log(\"Trades fetch already in progress or component unmounted, skipping\");\n                return Promise.resolve();\n            }\n            console.log(\"Fetching trades for \".concat(pair, \"/\").concat(timeframe));\n            setIsFetchingTrades(true);\n            return fetch(\"/api/trades?pair=\".concat(pair, \"&timeframe=\").concat(timeframe, \"&_=\").concat(Date.now()), {\n                headers: {\n                    'Cache-Control': 'no-cache, no-store',\n                    'Pragma': 'no-cache'\n                }\n            }).then({\n                \"useCallback[fetchTrades]\": (response)=>{\n                    if (!response.ok) {\n                        throw new Error(\"API error: \".concat(response.status));\n                    }\n                    return response.json();\n                }\n            }[\"useCallback[fetchTrades]\"]).then({\n                \"useCallback[fetchTrades]\": (data)=>{\n                    var _data_trades;\n                    if (!isMountedRef.current) {\n                        console.log(\"Component unmounted during trades fetch\");\n                        return;\n                    }\n                    console.log(\"Received \".concat(((_data_trades = data.trades) === null || _data_trades === void 0 ? void 0 : _data_trades.length) || 0, \" trades\"));\n                    if (!data.trades || !Array.isArray(data.trades)) {\n                        throw new Error('No valid trade data received');\n                    }\n                    setTrades(data.trades);\n                    // Update markers on chart if chart is initialized\n                    if (chartRef.current && candlestickSeriesRef.current) {\n                        updateTradeMarkers(data.trades);\n                    }\n                    return data.trades;\n                }\n            }[\"useCallback[fetchTrades]\"]).catch({\n                \"useCallback[fetchTrades]\": (error)=>{\n                    console.error('Error fetching trade data:', error);\n                    return [];\n                }\n            }[\"useCallback[fetchTrades]\"]).finally({\n                \"useCallback[fetchTrades]\": ()=>{\n                    setIsFetchingTrades(false);\n                }\n            }[\"useCallback[fetchTrades]\"]);\n        }\n    }[\"useCallback[fetchTrades]\"], [\n        pair,\n        timeframe\n    ]);\n    // Function to update trade markers on the chart\n    const updateTradeMarkers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[updateTradeMarkers]\": (tradeData)=>{\n            if (!chartRef.current) return;\n            try {\n                // Ensure we have valid trade data\n                if (!tradeData || !Array.isArray(tradeData) || tradeData.length === 0) {\n                    // Clear markers if no trades\n                    if (markerSeriesRef.current) {\n                        markerSeriesRef.current.setMarkers([]);\n                    } else if (candlestickSeriesRef.current) {\n                        candlestickSeriesRef.current.setMarkers([]);\n                    }\n                    return;\n                }\n                // Filter trades for this pair and timeframe\n                const relevantTrades = tradeData.filter({\n                    \"useCallback[updateTradeMarkers].relevantTrades\": (trade)=>trade.pair === pair && (trade.timeframe === timeframe || !timeframe)\n                }[\"useCallback[updateTradeMarkers].relevantTrades\"]);\n                console.log(\"Creating markers for \".concat(relevantTrades.length, \" relevant trades\"));\n                // Create markers for entry/exit points\n                const markers = relevantTrades.flatMap({\n                    \"useCallback[updateTradeMarkers].markers\": (trade)=>{\n                        const time = new Date(trade.timestamp).getTime() / 1000;\n                        const markers = [];\n                        // Entry marker\n                        markers.push({\n                            time,\n                            position: trade.direction === 'buy' ? 'belowBar' : 'aboveBar',\n                            color: trade.direction === 'buy' ? '#10b981' : '#ef4444',\n                            shape: trade.direction === 'buy' ? 'arrowUp' : 'arrowDown',\n                            text: \"Entry \".concat(formatPrice(trade.entry, pair)),\n                            size: 2\n                        });\n                        // Exit marker (for closed trades)\n                        if (trade.status !== 'open') {\n                            markers.push({\n                                time: time + 60 * 60,\n                                position: trade.direction === 'buy' ? 'aboveBar' : 'belowBar',\n                                color: trade.status === 'win' ? '#10b981' : '#ef4444',\n                                shape: 'circle',\n                                text: \"Exit (\".concat(trade.status.toUpperCase(), \")\"),\n                                size: 2\n                            });\n                        }\n                        return markers;\n                    }\n                }[\"useCallback[updateTradeMarkers].markers\"]);\n                console.log(\"Setting \".concat(markers.length, \" markers on chart\"));\n                // Set markers to the series\n                if (markerSeriesRef.current) {\n                    try {\n                        markerSeriesRef.current.setMarkers(markers);\n                    } catch (err) {\n                        console.error(\"Error setting markers on marker series:\", err);\n                        // Fall back to candlestick series\n                        if (candlestickSeriesRef.current) {\n                            candlestickSeriesRef.current.setMarkers(markers);\n                        }\n                    }\n                } else if (candlestickSeriesRef.current) {\n                    candlestickSeriesRef.current.setMarkers(markers);\n                }\n                // Add price lines for open trades to visualize entry/exit levels\n                if (candlestickSeriesRef.current) {\n                    // First, try to remove any existing trade price lines\n                    try {\n                        // Use a try-catch block since the priceLines method might not exist\n                        // Instead of trying to get all price lines, just attempt to remove the ones we know about\n                        // by their IDs (which we'll track in state)\n                        const openTrades = relevantTrades.filter({\n                            \"useCallback[updateTradeMarkers].openTrades\": (trade)=>trade.status === 'open'\n                        }[\"useCallback[updateTradeMarkers].openTrades\"]);\n                        openTrades.forEach({\n                            \"useCallback[updateTradeMarkers]\": (trade)=>{\n                                try {\n                                    // Try to remove existing lines for this trade ID if they exist\n                                    candlestickSeriesRef.current.removePriceLine(trade.id + '_entry');\n                                    candlestickSeriesRef.current.removePriceLine(trade.id + '_sl');\n                                    candlestickSeriesRef.current.removePriceLine(trade.id + '_tp');\n                                } catch (err) {\n                                // Ignore errors from removing non-existent lines\n                                }\n                            }\n                        }[\"useCallback[updateTradeMarkers]\"]);\n                    } catch (err) {\n                        console.error(\"Error removing existing price lines:\", err);\n                    }\n                    // Add new price lines for open trades\n                    const openTrades = relevantTrades.filter({\n                        \"useCallback[updateTradeMarkers].openTrades\": (trade)=>trade.status === 'open'\n                    }[\"useCallback[updateTradeMarkers].openTrades\"]);\n                    openTrades.forEach({\n                        \"useCallback[updateTradeMarkers]\": (trade)=>{\n                            // Entry price line\n                            try {\n                            // Entry price line - Removed to eliminate green horizontal line when direction is 'buy'\n                            // candlestickSeriesRef.current.createPriceLine({\n                            //   price: trade.entry,\n                            //   color: trade.direction === 'buy' ? '#10b981' : '#ef4444',\n                            //   lineWidth: 2,\n                            //   lineStyle: 1, // Solid\n                            //   axisLabelVisible: false, // Hide axis label to prevent clutter\n                            //   title: `Entry ${formatPrice(trade.entry, pair)}`,\n                            //   id: trade.id + '_entry' // Use a simpler ID format\n                            // });\n                            // No longer showing stop loss line\n                            // Take Profit price line - Removed to eliminate green horizontal line\n                            // candlestickSeriesRef.current.createPriceLine({\n                            //   price: trade.takeProfit,\n                            //   color: '#10b981', // Green\n                            //   lineWidth: 2,\n                            //   lineStyle: 3, // Dotted\n                            //   axisLabelVisible: false, // Hide axis label to prevent clutter\n                            //   title: `TP ${formatPrice(trade.takeProfit, pair)}`,\n                            //   id: trade.id + '_tp'\n                            // });\n                            } catch (err) {\n                                console.error(\"Error adding trade price lines:\", err);\n                            }\n                        }\n                    }[\"useCallback[updateTradeMarkers]\"]);\n                }\n            } catch (err) {\n                console.error(\"Error updating trade markers:\", err);\n            }\n        }\n    }[\"useCallback[updateTradeMarkers]\"], [\n        pair,\n        timeframe\n    ]);\n    // Now define handleRetry after fetchCandleData is defined\n    const handleRetry = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[handleRetry]\": ()=>{\n            console.log(\"Retry button clicked, hard reset\");\n            if (isRetryingRef.current) {\n                console.log(\"Already retrying, ignoring duplicate request\");\n                return;\n            }\n            isRetryingRef.current = true;\n            setIsLoading(true);\n            setError(null);\n            // Clean up existing resources\n            cleanupChart();\n            cleanupTimersAndIntervals();\n            // Create chart with delay to ensure clean state\n            setTimeout({\n                \"useCallback[handleRetry]\": ()=>{\n                    if (!chartContainerRef.current || !isMountedRef.current) {\n                        setError(\"Chart container not available\");\n                        setIsLoading(false);\n                        isRetryingRef.current = false;\n                        return;\n                    }\n                    try {\n                        const container = chartContainerRef.current;\n                        // Set container styles\n                        container.style.width = '100%';\n                        container.style.height = '100%';\n                        container.style.position = 'relative';\n                        container.style.display = 'block';\n                        // Get dimensions\n                        const width = Math.max(container.clientWidth || 300, 300);\n                        const height = Math.max(container.clientHeight || 300, 300);\n                        console.log(\"Creating chart with dimensions: \".concat(width, \"x\").concat(height));\n                        // Create chart with minimal options\n                        const chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(container, {\n                            width,\n                            height,\n                            layout: {\n                                background: {\n                                    color: '#121212'\n                                },\n                                textColor: '#d1d4dc',\n                                fontSize: 12\n                            },\n                            grid: {\n                                vertLines: {\n                                    color: 'rgba(42, 46, 57, 0.4)',\n                                    style: 1\n                                },\n                                horzLines: {\n                                    color: 'transparent',\n                                    style: 1,\n                                    visible: false\n                                }\n                            },\n                            rightPriceScale: {\n                                borderColor: 'rgba(197, 203, 206, 0.3)',\n                                borderVisible: true,\n                                scaleMargins: {\n                                    top: 0.1,\n                                    bottom: 0.1\n                                },\n                                // Ensure more price labels on the y-axis\n                                minimumHeight: 20,\n                                textColor: '#d1d4dc',\n                                fontSize: 11,\n                                alignLabels: true,\n                                mode: 0,\n                                autoScale: true,\n                                entireTextOnly: false,\n                                ticksVisible: true,\n                                visible: true\n                            },\n                            timeScale: {\n                                borderColor: 'rgba(197, 203, 206, 0.3)',\n                                timeVisible: true,\n                                secondsVisible: false,\n                                tickMarkFormatter: {\n                                    \"useCallback[handleRetry].chart\": (time, tickMarkType, locale)=>{\n                                        const date = new Date(time * 1000);\n                                        // Format based on timeframe\n                                        if (timeframe === '1d' || timeframe === 'Daily' || timeframe === 'Weekly') {\n                                            return date.toLocaleDateString('en-US', {\n                                                month: 'short',\n                                                day: 'numeric'\n                                            });\n                                        } else {\n                                            const hours = date.getHours().toString().padStart(2, '0');\n                                            const minutes = date.getMinutes().toString().padStart(2, '0');\n                                            return \"\".concat(hours, \":\").concat(minutes);\n                                        }\n                                    }\n                                }[\"useCallback[handleRetry].chart\"]\n                            },\n                            crosshair: {\n                                mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,\n                                vertLine: {\n                                    color: 'rgba(224, 227, 235, 0.4)',\n                                    width: 1,\n                                    style: 1,\n                                    visible: true,\n                                    labelVisible: true\n                                },\n                                horzLine: {\n                                    color: 'transparent',\n                                    width: 1,\n                                    style: 1,\n                                    visible: false,\n                                    labelVisible: true\n                                }\n                            },\n                            // Handle watermark\n                            watermark: {\n                                visible: false\n                            }\n                        });\n                        // Function to determine appropriate price precision based on pair and current price level\n                        const determinePricePrecision = {\n                            \"useCallback[handleRetry].determinePricePrecision\": (pair, currentPrice)=>{\n                                if (pair.includes('JPY')) return 3;\n                                // For pairs with very small price movements (like some crypto pairs)\n                                if (currentPrice < 0.01) return 8;\n                                // Default for forex pairs like EUR_USD\n                                return 5;\n                            }\n                        }[\"useCallback[handleRetry].determinePricePrecision\"];\n                        // Get appropriate precision for this pair\n                        const precision = determinePricePrecision(pair, currentPrice || 1.0);\n                        const series = chart.addCandlestickSeries({\n                            upColor: '#10b981',\n                            downColor: '#ef4444',\n                            borderVisible: false,\n                            wickUpColor: '#10b981',\n                            wickDownColor: '#ef4444',\n                            priceFormat: {\n                                type: 'price',\n                                precision: precision,\n                                minMove: Math.pow(10, -precision)\n                            },\n                            // Additional formatting for price labels\n                            lastValueVisible: true,\n                            priceLineVisible: true,\n                            priceLineWidth: 1,\n                            priceLineColor: 'rgba(255, 255, 255, 0.5)',\n                            priceLineStyle: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.LineStyle.Dotted\n                        });\n                        // After creating the chart, make sure the rightPriceScale is properly configured\n                        chart.applyOptions({\n                            rightPriceScale: {\n                                autoScale: true,\n                                mode: 0,\n                                invertScale: false,\n                                alignLabels: true,\n                                borderVisible: true,\n                                scaleMargins: {\n                                    top: 0.1,\n                                    bottom: 0.1\n                                },\n                                ticksVisible: true,\n                                // Adjust the number of price labels\n                                minimumHeight: 20\n                            }\n                        });\n                        // Force price format update\n                        series.applyOptions({\n                            priceFormat: {\n                                type: 'price',\n                                precision: precision,\n                                minMove: Math.pow(10, -precision)\n                            }\n                        });\n                        // Add volume histogram with proper configuration\n                        try {\n                            const volumeSeries = chart.addHistogramSeries({\n                                priceScaleId: '',\n                                scaleMargins: {\n                                    top: 0.85,\n                                    bottom: 0\n                                },\n                                priceFormat: {\n                                    type: 'volume'\n                                },\n                                color: 'rgba(76, 175, 80, 0.5)'\n                            });\n                            volumeSeriesRef.current = volumeSeries;\n                        } catch (err) {\n                            console.error(\"Failed to add volume series:\", err);\n                        // Continue without volume series\n                        }\n                        // Save references\n                        chartRef.current = chart;\n                        candlestickSeriesRef.current = series;\n                        // Add marker series for trade entry/exit points\n                        try {\n                            const markerSeries = chart.addLineSeries({\n                                lineVisible: false,\n                                lastValueVisible: false,\n                                priceLineVisible: false,\n                                baseLineVisible: false,\n                                crosshairMarkerVisible: false,\n                                priceFormat: {\n                                    type: 'price',\n                                    precision: precision,\n                                    minMove: Math.pow(10, -precision)\n                                }\n                            });\n                            markerSeriesRef.current = markerSeries;\n                            // If we already have trades, immediately add markers\n                            if (trades && trades.length > 0) {\n                                updateTradeMarkers(trades);\n                            } else if (externalTrades && Array.isArray(externalTrades)) {\n                                // Or use external trades if available\n                                const relevantTrades = externalTrades.filter({\n                                    \"useCallback[handleRetry].relevantTrades\": (trade)=>trade.pair === pair && (trade.timeframe === timeframe || !timeframe)\n                                }[\"useCallback[handleRetry].relevantTrades\"]);\n                                updateTradeMarkers(relevantTrades);\n                            }\n                        } catch (err) {\n                            console.error(\"Failed to add marker series:\", err);\n                        // Continue without marker series, will fall back to candlestick series for markers\n                        }\n                        // Add price line\n                        const priceLine = series.createPriceLine({\n                            price: 0,\n                            color: '#2196F3',\n                            lineWidth: 1,\n                            axisLabelVisible: true,\n                            title: 'Live'\n                        });\n                        priceLabelRef.current = priceLine;\n                        // Set up resize handler\n                        const handleResize = {\n                            \"useCallback[handleRetry].handleResize\": ()=>{\n                                if (!chartRef.current || !container) return;\n                                const newWidth = container.clientWidth;\n                                const newHeight = container.clientHeight;\n                                if (newWidth > 0 && newHeight > 0) {\n                                    try {\n                                        chartRef.current.resize(newWidth, newHeight);\n                                    } catch (err) {\n                                        console.error(\"Error resizing chart:\", err);\n                                    }\n                                }\n                            }\n                        }[\"useCallback[handleRetry].handleResize\"];\n                        // Set up resize observer\n                        try {\n                            resizeObserverRef.current = new ResizeObserver(handleResize);\n                            resizeObserverRef.current.observe(container);\n                        } catch (err) {\n                            console.error(\"Error setting up ResizeObserver:\", err);\n                            window.addEventListener('resize', handleResize);\n                        }\n                        // Load data\n                        fetchCandleData().then({\n                            \"useCallback[handleRetry]\": (data)=>{\n                                console.log(\"Initial data loaded successfully\");\n                                // If we have volume data, set up volume series\n                                if (data && data.candles && data.candles.length > 0 && data.candles[0].volume && volumeSeriesRef.current) {\n                                    try {\n                                        const volumeData = data.candles.map({\n                                            \"useCallback[handleRetry].volumeData\": (candle)=>({\n                                                    time: candle.time,\n                                                    value: candle.volume || 0,\n                                                    color: candle.c >= candle.o ? 'rgba(16, 185, 129, 0.5)' // green for up\n                                                     : 'rgba(239, 68, 68, 0.5)' // red for down\n                                                })\n                                        }[\"useCallback[handleRetry].volumeData\"]);\n                                        volumeSeriesRef.current.setData(volumeData);\n                                    } catch (err) {\n                                        console.error(\"Error setting volume data:\", err);\n                                    }\n                                }\n                                // Apply trade markers after chart data is loaded\n                                setTimeout({\n                                    \"useCallback[handleRetry]\": ()=>{\n                                        if (externalTrades && Array.isArray(externalTrades) && externalTrades.length > 0) {\n                                            console.log(\"Applying external trade markers after chart initialization\");\n                                            updateTradeMarkers(externalTrades);\n                                        } else {\n                                            // Try to fetch and apply trade data\n                                            fetchTrades().then({\n                                                \"useCallback[handleRetry]\": (fetchedTrades)=>{\n                                                    if (fetchedTrades && fetchedTrades.length > 0) {\n                                                        console.log(\"Applying fetched trade markers after chart initialization\");\n                                                        updateTradeMarkers(fetchedTrades);\n                                                    }\n                                                }\n                                            }[\"useCallback[handleRetry]\"]).catch({\n                                                \"useCallback[handleRetry]\": (err)=>{\n                                                    console.error(\"Error fetching trades for markers:\", err);\n                                                }\n                                            }[\"useCallback[handleRetry]\"]);\n                                        }\n                                    }\n                                }[\"useCallback[handleRetry]\"], 500);\n                            }\n                        }[\"useCallback[handleRetry]\"]).catch({\n                            \"useCallback[handleRetry]\": (err)=>{\n                                console.error(\"Failed to load initial data:\", err);\n                            }\n                        }[\"useCallback[handleRetry]\"]).finally({\n                            \"useCallback[handleRetry]\": ()=>{\n                                isRetryingRef.current = false;\n                            }\n                        }[\"useCallback[handleRetry]\"]);\n                    } catch (err) {\n                        console.error(\"Error in chart creation:\", err);\n                        setError(\"Chart creation failed: \".concat(err.message));\n                        setIsLoading(false);\n                        isRetryingRef.current = false;\n                    }\n                }\n            }[\"useCallback[handleRetry]\"], 300);\n        }\n    }[\"useCallback[handleRetry]\"], [\n        pair,\n        timeframe,\n        cleanupChart,\n        cleanupTimersAndIntervals,\n        fetchCandleData,\n        currentPrice\n    ]);\n    // Initialize chart only once\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            console.log(\"Chart initialization effect running\");\n            // Call handleRetry to initialize the chart\n            handleRetry();\n            // Clean up on unmount\n            return ({\n                \"useEffect\": ()=>{\n                    isMountedRef.current = false;\n                    cleanupChart();\n                    cleanupTimersAndIntervals();\n                }\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], []); // Empty dependency array - run only once\n    // Set up data refresh interval\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            if (!chartRef.current || !candlestickSeriesRef.current) return;\n            console.log(\"Setting up data refresh interval\");\n            // Update every 30 seconds\n            updateIntervalRef.current = setInterval({\n                \"useEffect\": ()=>{\n                    if (isMountedRef.current && !isFetchingRef.current) {\n                        fetchCandleData().catch({\n                            \"useEffect\": (err)=>{\n                                console.error(\"Error in interval fetch:\", err);\n                            }\n                        }[\"useEffect\"]);\n                    }\n                }\n            }[\"useEffect\"], 30000);\n            return ({\n                \"useEffect\": ()=>{\n                    if (updateIntervalRef.current) {\n                        clearInterval(updateIntervalRef.current);\n                        updateIntervalRef.current = null;\n                    }\n                }\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], [\n        fetchCandleData\n    ]);\n    // Set up trade data fetch\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            if (!chartRef.current || !candlestickSeriesRef.current) return;\n            console.log(\"Fetching initial trade data\");\n            fetchTrades().catch({\n                \"useEffect\": (err)=>{\n                    console.error(\"Error fetching initial trade data:\", err);\n                }\n            }[\"useEffect\"]);\n            // Set up interval to refresh trade data\n            const tradeUpdateInterval = setInterval({\n                \"useEffect.tradeUpdateInterval\": ()=>{\n                    if (isMountedRef.current && !isFetchingTrades) {\n                        fetchTrades().catch({\n                            \"useEffect.tradeUpdateInterval\": (err)=>{\n                                console.error(\"Error in trade interval fetch:\", err);\n                            }\n                        }[\"useEffect.tradeUpdateInterval\"]);\n                    }\n                }\n            }[\"useEffect.tradeUpdateInterval\"], 30000);\n            return ({\n                \"useEffect\": ()=>{\n                    clearInterval(tradeUpdateInterval);\n                }\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], [\n        fetchTrades\n    ]);\n    // Use useLayoutEffect to check container dimensions before mounting\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)({\n        \"useLayoutEffect\": ()=>{\n            if (chartContainerRef.current) {\n                const container = chartContainerRef.current;\n                // Force container to be visible and have dimensions\n                container.style.width = '100%';\n                container.style.height = '100%';\n                container.style.minHeight = '400px';\n                container.style.display = 'block';\n                container.style.position = 'relative';\n                // Log dimensions\n                console.log(\"Initial container dimensions: \".concat(container.clientWidth, \"x\").concat(container.clientHeight));\n                // Set container ready if dimensions are valid\n                if (container.clientWidth > 0 && container.clientHeight > 0) {\n                    containerReadyRef.current = true;\n                } else {\n                    // Force dimensions one more time\n                    container.style.width = '100vw';\n                    container.style.height = '70vh';\n                    // Check again after a moment\n                    setTimeout({\n                        \"useLayoutEffect\": ()=>{\n                            console.log(\"Delayed container dimensions: \".concat(container.clientWidth, \"x\").concat(container.clientHeight));\n                            containerReadyRef.current = container.clientWidth > 0 && container.clientHeight > 0;\n                        }\n                    }[\"useLayoutEffect\"], 100);\n                }\n            }\n        }\n    }[\"useLayoutEffect\"], []);\n    // Initialize chart when component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            console.log(\"ChartComponent mounted\");\n            isMountedRef.current = true;\n            // Wait for next tick to ensure container is in DOM\n            setTimeout({\n                \"useEffect\": ()=>{\n                    if (!containerReadyRef.current && chartContainerRef.current) {\n                        // Check dimensions again\n                        const container = chartContainerRef.current;\n                        console.log(\"Container dimensions before init: \".concat(container.clientWidth, \"x\").concat(container.clientHeight));\n                        // Force minimum size if needed\n                        if (container.clientWidth < 10 || container.clientHeight < 10) {\n                            container.style.width = '100%';\n                            container.style.height = '400px';\n                            container.style.minHeight = '400px';\n                        }\n                    }\n                    const success = handleRetry();\n                    if (success) {\n                        fetchCandleData().then({\n                            \"useEffect\": ()=>{\n                                console.log(\"Initial data loaded successfully\");\n                            }\n                        }[\"useEffect\"]).catch({\n                            \"useEffect\": (err)=>{\n                                console.error(\"Failed to load initial data:\", err);\n                            }\n                        }[\"useEffect\"]);\n                        // Set up data refresh interval\n                        updateIntervalRef.current = setInterval({\n                            \"useEffect\": ()=>{\n                                if (isMountedRef.current && !isFetchingRef.current) {\n                                    fetchCandleData().catch({\n                                        \"useEffect\": (err)=>{\n                                            console.error(\"Error in interval fetch:\", err);\n                                        }\n                                    }[\"useEffect\"]);\n                                }\n                            }\n                        }[\"useEffect\"], 30000);\n                    }\n                }\n            }[\"useEffect\"], 300);\n            return ({\n                \"useEffect\": ()=>{\n                    console.log(\"ChartComponent unmounting\");\n                    isMountedRef.current = false;\n                    cleanupChart();\n                    cleanupTimersAndIntervals();\n                }\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], [\n        handleRetry,\n        fetchCandleData,\n        cleanupChart,\n        cleanupTimersAndIntervals\n    ]);\n    // Expose methods to parent via ref\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, {\n        \"useImperativeHandle\": ()=>({\n                reloadChart: ({\n                    \"useImperativeHandle\": ()=>{\n                        console.log(\"Reload chart method called from parent\");\n                        if (chartRef.current) {\n                            fetchCandleData().catch({\n                                \"useImperativeHandle\": (err)=>{\n                                    console.error(\"Error reloading chart data:\", err);\n                                }\n                            }[\"useImperativeHandle\"]);\n                            fetchTrades().catch({\n                                \"useImperativeHandle\": (err)=>{\n                                    console.error(\"Error reloading trade data:\", err);\n                                }\n                            }[\"useImperativeHandle\"]);\n                        } else {\n                            console.warn(\"Chart not initialized, cannot reload\");\n                        }\n                    }\n                })[\"useImperativeHandle\"]\n            })\n    }[\"useImperativeHandle\"]);\n    // Sync with external trades\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            if (externalTrades && Array.isArray(externalTrades)) {\n                console.log(\"Received \".concat(externalTrades.length, \" external trades\"));\n                // Filter trades for the current pair and timeframe\n                const filteredTrades = externalTrades.filter({\n                    \"useEffect.filteredTrades\": (trade)=>trade.pair === pair && (trade.timeframe === timeframe || !timeframe)\n                }[\"useEffect.filteredTrades\"]);\n                setTrades(filteredTrades);\n                // Update markers if chart is ready\n                if (chartRef.current && candlestickSeriesRef.current) {\n                    updateTradeMarkers(filteredTrades);\n                }\n            }\n        }\n    }[\"useEffect\"], [\n        externalTrades,\n        pair,\n        timeframe,\n        updateTradeMarkers\n    ]);\n    // Create a separate effect specifically for updating markers when externalTrades change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            if (!chartRef.current) return;\n            // Local function to update markers without dependency on updateTradeMarkers\n            const applyMarkers = {\n                \"useEffect.applyMarkers\": ()=>{\n                    if (externalTrades && Array.isArray(externalTrades)) {\n                        console.log(\"External trades updated, updating markers (\".concat(externalTrades.length, \" trades)\"));\n                        // Filter trades for this pair and timeframe\n                        const relevantTrades = externalTrades.filter({\n                            \"useEffect.applyMarkers.relevantTrades\": (trade)=>trade.pair === pair && (trade.timeframe === timeframe || !timeframe)\n                        }[\"useEffect.applyMarkers.relevantTrades\"]);\n                        if (relevantTrades.length === 0) {\n                            console.log('No relevant trades to display');\n                            return;\n                        }\n                        console.log(\"Found \".concat(relevantTrades.length, \" relevant trades for markers\"));\n                        try {\n                            // Create markers for entry/exit points\n                            const markers = relevantTrades.flatMap({\n                                \"useEffect.applyMarkers.markers\": (trade)=>{\n                                    const time = new Date(trade.timestamp).getTime() / 1000;\n                                    const markers = [];\n                                    // Entry marker\n                                    markers.push({\n                                        time,\n                                        position: trade.direction === 'buy' ? 'belowBar' : 'aboveBar',\n                                        color: trade.direction === 'buy' ? '#10b981' : '#ef4444',\n                                        shape: trade.direction === 'buy' ? 'arrowUp' : 'arrowDown',\n                                        text: \"Entry \".concat(formatPrice(trade.entry, pair)),\n                                        size: 2\n                                    });\n                                    // Exit marker (for closed trades)\n                                    if (trade.status !== 'open') {\n                                        markers.push({\n                                            time: time + 60 * 60,\n                                            position: trade.direction === 'buy' ? 'aboveBar' : 'belowBar',\n                                            color: trade.status === 'win' ? '#10b981' : '#ef4444',\n                                            shape: 'circle',\n                                            text: \"Exit (\".concat(trade.status.toUpperCase(), \")\"),\n                                            size: 2\n                                        });\n                                    }\n                                    return markers;\n                                }\n                            }[\"useEffect.applyMarkers.markers\"]);\n                            console.log(\"Setting \".concat(markers.length, \" markers on chart\"));\n                            // Set markers to the appropriate series\n                            if (markerSeriesRef.current) {\n                                markerSeriesRef.current.setMarkers(markers);\n                            } else if (candlestickSeriesRef.current) {\n                                candlestickSeriesRef.current.setMarkers(markers);\n                            }\n                            // Add price lines for open trades to visualize entry/exit levels\n                            if (candlestickSeriesRef.current) {\n                                // First, try to remove any existing trade price lines\n                                try {\n                                    // Use a try-catch block since the priceLines method might not exist\n                                    // Instead of trying to get all price lines, just attempt to remove the ones we know about\n                                    // by their IDs (which we'll track in state)\n                                    const openTrades = relevantTrades.filter({\n                                        \"useEffect.applyMarkers.openTrades\": (trade)=>trade.status === 'open'\n                                    }[\"useEffect.applyMarkers.openTrades\"]);\n                                    openTrades.forEach({\n                                        \"useEffect.applyMarkers\": (trade)=>{\n                                            try {\n                                                // Try to remove existing lines for this trade ID if they exist\n                                                candlestickSeriesRef.current.removePriceLine(trade.id + '_entry');\n                                                candlestickSeriesRef.current.removePriceLine(trade.id + '_sl');\n                                                candlestickSeriesRef.current.removePriceLine(trade.id + '_tp');\n                                            } catch (err) {\n                                            // Ignore errors from removing non-existent lines\n                                            }\n                                        }\n                                    }[\"useEffect.applyMarkers\"]);\n                                } catch (err) {\n                                    console.error(\"Error removing existing price lines:\", err);\n                                }\n                                // Add new price lines for open trades\n                                const openTrades = relevantTrades.filter({\n                                    \"useEffect.applyMarkers.openTrades\": (trade)=>trade.status === 'open'\n                                }[\"useEffect.applyMarkers.openTrades\"]);\n                                openTrades.forEach({\n                                    \"useEffect.applyMarkers\": (trade)=>{\n                                        // Entry price line\n                                        try {\n                                        // Entry price line - Removed to eliminate green horizontal line when direction is 'buy'\n                                        // candlestickSeriesRef.current.createPriceLine({\n                                        //   price: trade.entry,\n                                        //   color: trade.direction === 'buy' ? '#10b981' : '#ef4444',\n                                        //   lineWidth: 2,\n                                        //   lineStyle: 1, // Solid\n                                        //   axisLabelVisible: false, // Hide axis label to prevent clutter\n                                        //   title: `Entry ${formatPrice(trade.entry, pair)}`,\n                                        //   id: trade.id + '_entry' // Use a simpler ID format\n                                        // });\n                                        // No longer showing stop loss line\n                                        // Take Profit price line - Removed to eliminate green horizontal line\n                                        // candlestickSeriesRef.current.createPriceLine({\n                                        //   price: trade.takeProfit,\n                                        //   color: '#10b981', // Green\n                                        //   lineWidth: 2,\n                                        //   lineStyle: 3, // Dotted\n                                        //   axisLabelVisible: false, // Hide axis label to prevent clutter\n                                        //   title: `TP ${formatPrice(trade.takeProfit, pair)}`,\n                                        //   id: trade.id + '_tp'\n                                        // });\n                                        } catch (err) {\n                                            console.error(\"Error adding trade price lines:\", err);\n                                        }\n                                    }\n                                }[\"useEffect.applyMarkers\"]);\n                            }\n                        } catch (err) {\n                            console.error(\"Error setting markers:\", err);\n                        }\n                    }\n                }\n            }[\"useEffect.applyMarkers\"];\n            // Apply with a short timeout to ensure chart is ready\n            const timerId = setTimeout(applyMarkers, 100);\n            return ({\n                \"useEffect\": ()=>clearTimeout(timerId)\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], [\n        externalTrades,\n        pair,\n        timeframe\n    ]);\n    // Return component JSX\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col w-full h-full relative\",\n        style: {\n            minHeight: '400px'\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: chartContainerRef,\n                className: \"flex-1 w-full h-full\",\n                style: {\n                    minHeight: '400px',\n                    width: '100%',\n                    height: '100%',\n                    position: 'relative',\n                    display: 'block'\n                }\n            }, void 0, false, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 1044,\n                columnNumber: 7\n            }, undefined),\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex items-center justify-center bg-opacity-75 bg-gray-900 z-10\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-white\",\n                    children: \"Loading chart data...\"\n                }, void 0, false, {\n                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                    lineNumber: 1058,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 1057,\n                columnNumber: 9\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex flex-col items-center justify-center bg-opacity-75 bg-gray-900 z-10\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-red-500 mb-4\",\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1064,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded\",\n                        onClick: handleRetry,\n                        children: \"Retry\"\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1065,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 1063,\n                columnNumber: 9\n            }, undefined),\n            currentPrice && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-2 right-2 flex items-center space-x-2 z-20\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-sm font-mono \".concat(priceChangePositive ? 'text-green-500' : 'text-red-500'),\n                        children: formatPrice(currentPrice, pair)\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1076,\n                        columnNumber: 11\n                    }, undefined),\n                    lastUpdateTime && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-xs text-gray-400\",\n                        children: lastUpdateTime.toLocaleTimeString()\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1080,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 1075,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: tradesContainerRef,\n                className: \"w-full bg-gray-900 border-t border-gray-700 overflow-auto\",\n                style: {\n                    height: '150px',\n                    minHeight: '150px'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-2 border-b border-gray-700 bg-gray-800 flex justify-between items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"text-sm font-semibold text-white\",\n                                children: \"Trades\"\n                            }, void 0, false, {\n                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                lineNumber: 1096,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-xs text-gray-400\",\n                                children: [\n                                    trades.length,\n                                    \" \",\n                                    trades.length === 1 ? 'trade' : 'trades',\n                                    \" for \",\n                                    pair,\n                                    \" / \",\n                                    timeframe\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                lineNumber: 1097,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1095,\n                        columnNumber: 9\n                    }, undefined),\n                    trades.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center justify-center h-full text-gray-500 text-sm\",\n                        children: \"No trades found for this pair and timeframe\"\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1103,\n                        columnNumber: 11\n                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"overflow-x-auto\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                            className: \"min-w-full divide-y divide-gray-700\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                                    className: \"bg-gray-800\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Direction\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1111,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Entry\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1112,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Stop Loss\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1113,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Take Profit\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1114,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"R:R\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1115,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Status\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1116,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Time\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1117,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                        lineNumber: 1110,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                    lineNumber: 1109,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                                    className: \"bg-gray-900 divide-y divide-gray-800\",\n                                    children: trades.map((trade)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                            className: \"hover:bg-gray-800\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"flex items-center\",\n                                                        children: [\n                                                            trade.direction === 'buy' ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Activity_ArrowDown_ArrowUp_Clock_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.ArrowUp, {\n                                                                size: 14,\n                                                                className: \"text-green-500 mr-1\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                                lineNumber: 1126,\n                                                                columnNumber: 27\n                                                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Activity_ArrowDown_ArrowUp_Clock_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.ArrowDown, {\n                                                                size: 14,\n                                                                className: \"text-red-500 mr-1\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                                lineNumber: 1128,\n                                                                columnNumber: 27\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: trade.direction === 'buy' ? 'text-green-500' : 'text-red-500',\n                                                                children: trade.direction.toUpperCase()\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                                lineNumber: 1130,\n                                                                columnNumber: 25\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                        lineNumber: 1124,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1123,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm font-mono\",\n                                                    children: formatPrice(trade.entry, pair)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1135,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm font-mono text-red-500\",\n                                                    children: formatPrice(trade.stopLoss, pair)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1138,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm font-mono text-green-500\",\n                                                    children: formatPrice(trade.takeProfit, pair)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1141,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm\",\n                                                    children: trade.riskReward\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1144,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"inline-flex px-2 text-xs leading-5 font-semibold rounded-full\\n                        \".concat(trade.status === 'win' ? 'bg-green-100 text-green-800' : trade.status === 'loss' ? 'bg-red-100 text-red-800' : 'bg-blue-100 text-blue-800'),\n                                                        children: trade.status.toUpperCase()\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                        lineNumber: 1148,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1147,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm text-gray-400\",\n                                                    children: new Date(trade.timestamp).toLocaleString()\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1155,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, trade.id, true, {\n                                            fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                            lineNumber: 1122,\n                                            columnNumber: 19\n                                        }, undefined))\n                                }, void 0, false, {\n                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                    lineNumber: 1120,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                            lineNumber: 1108,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1107,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 1090,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n        lineNumber: 1043,\n        columnNumber: 5\n    }, undefined);\n}, \"hU8mrmguyDfslmw5IewPKImSugs=\")), \"hU8mrmguyDfslmw5IewPKImSugs=\"));\nvar _c, _c1;\n$RefreshReg$(_c, \"%default%$forwardRef\");\n$RefreshReg$(_c1, \"%default%\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NoYXJ0Q29tcG9uZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFtSDtBQUN4QztBQUNMO0FBRXRFLCtEQUErRDtBQUMvRCxNQUFNZSxjQUFjLENBQUNDLE9BQU9DO0lBQzFCLElBQUlELFVBQVUsUUFBUUEsVUFBVUUsV0FBVyxPQUFPO0lBQ2xELE1BQU1DLFlBQVlGLEtBQUtHLFFBQVEsQ0FBQyxTQUFTLElBQUk7SUFDN0MsT0FBT0osTUFBTUssT0FBTyxDQUFDRjtBQUN2QjtBQUVBLG9GQUFlZCxHQUFBQSxpREFBVUEsU0FBQyxRQUFzQ2lCO1FBQXJDLEVBQUVMLElBQUksRUFBRU0sU0FBUyxFQUFFQyxjQUFjLEVBQUU7O0lBQzVELDBFQUEwRTtJQUMxRSx5REFBeUQ7SUFFekQsK0RBQStEO0lBQy9ELE1BQU1DLG9CQUFvQnhCLDZDQUFNQSxDQUFDO0lBQ2pDLE1BQU15QixXQUFXekIsNkNBQU1BLENBQUM7SUFDeEIsTUFBTTBCLHVCQUF1QjFCLDZDQUFNQSxDQUFDO0lBQ3BDLE1BQU0yQixrQkFBa0IzQiw2Q0FBTUEsQ0FBQztJQUMvQixNQUFNNEIsZ0JBQWdCNUIsNkNBQU1BLENBQUM7SUFDN0IsTUFBTTZCLGtCQUFrQjdCLDZDQUFNQSxDQUFDO0lBQy9CLE1BQU04QixvQkFBb0I5Qiw2Q0FBTUEsQ0FBQztJQUNqQyxNQUFNK0IsV0FBVy9CLDZDQUFNQSxDQUFDO0lBQ3hCLE1BQU1nQyxvQkFBb0JoQyw2Q0FBTUEsQ0FBQztJQUNqQyxNQUFNaUMsZUFBZWpDLDZDQUFNQSxDQUFDO0lBQzVCLE1BQU1rQyxnQkFBZ0JsQyw2Q0FBTUEsQ0FBQztJQUM3QixNQUFNbUMsc0JBQXNCbkMsNkNBQU1BLENBQUM7SUFDbkMsTUFBTW9DLGdCQUFnQnBDLDZDQUFNQSxDQUFDO0lBQzdCLE1BQU1xQyxvQkFBb0JyQyw2Q0FBTUEsQ0FBQztJQUNqQyxNQUFNc0MscUJBQXFCdEMsNkNBQU1BLENB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V0FBVTs4REFDWC9OLFlBQVkyRyxNQUFNVyxLQUFLLEVBQUVwSDs7Ozs7OzhEQUU1Qiw4REFBQ3lPO29EQUFHWixXQUFVOzhEQUNYL04sWUFBWTJHLE1BQU1pSSxRQUFRLEVBQUUxTzs7Ozs7OzhEQUUvQiw4REFBQ3lPO29EQUFHWixXQUFVOzhEQUNYL04sWUFBWTJHLE1BQU1rSSxVQUFVLEVBQUUzTzs7Ozs7OzhEQUVqQyw4REFBQ3lPO29EQUFHWixXQUFVOzhEQUNYcEgsTUFBTW1JLFVBQVU7Ozs7Ozs4REFFbkIsOERBQUNIO29EQUFHWixXQUFVOzhEQUNaLDRFQUFDRzt3REFBS0gsV0FBVywwRkFHZSxPQUY1QnBILE1BQU0zQyxNQUFNLEtBQUssUUFBUSxnQ0FDekIyQyxNQUFNM0MsTUFBTSxLQUFLLFNBQVMsNEJBQzFCO2tFQUNEMkMsTUFBTTNDLE1BQU0sQ0FBQ3dELFdBQVc7Ozs7Ozs7Ozs7OzhEQUc3Qiw4REFBQ21IO29EQUFHWixXQUFVOzhEQUNYLElBQUl0SyxLQUFLa0QsTUFBTUcsU0FBUyxFQUFFaUksY0FBYzs7Ozs7OzsyQ0FsQ3BDcEksTUFBTWlCLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTZDbkMsc0VBQUciLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbXJhYW4uYWRlbS9Eb2N1bWVudHMvUHJvamVjdHMvTmVydmFsYS9OZXJ2YWxhLmZpbGVzL3NyYy9jb21wb25lbnRzL0NoYXJ0Q29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZUltcGVyYXRpdmVIYW5kbGUsIGZvcndhcmRSZWYsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUNoYXJ0LCBDcm9zc2hhaXJNb2RlLCBMaW5lU3R5bGUgfSBmcm9tICdsaWdodHdlaWdodC1jaGFydHMnO1xuaW1wb3J0IHsgQWN0aXZpdHksIEFycm93RG93biwgQXJyb3dVcCwgWCwgQ2xvY2sgfSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuXG4vLyBBZGQgaGVscGVyIGZ1bmN0aW9uIGZvciBmb3JtYXR0aW5nIHByaWNlIHZhbHVlcyBjb25zaXN0ZW50bHlcbmNvbnN0IGZvcm1hdFByaWNlID0gKHByaWNlLCBwYWlyKSA9PiB7XG4gIGlmIChwcmljZSA9PT0gbnVsbCB8fCBwcmljZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gJyc7XG4gIGNvbnN0IHByZWNpc2lvbiA9IHBhaXIuaW5jbHVkZXMoJ0pQWScpID8gMyA6IDU7XG4gIHJldHVybiBwcmljZS50b0ZpeGVkKHByZWNpc2lvbik7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmb3J3YXJkUmVmKCh7IHBhaXIsIHRpbWVmcmFtZSwgZXh0ZXJuYWxUcmFkZXMgfSwgcmVmKSA9PiB7XG4gIC8vIEZpcnN0LCBlbnN1cmUgYWxsIHJlZmVyZW5jZXMgYXJlIGluaXRpYWxpemVkIGF0IHRoZSBjb21wb25lbnQgdG9wIGxldmVsXG4gIC8vIHRvIGF2b2lkIFwiQ2Fubm90IGFjY2VzcyB1bmluaXRpYWxpemVkIHZhcmlhYmxlXCIgZXJyb3JzXG5cbiAgLy8gRGVmaW5lIHJlZnMgZmlyc3QgLSBiZWZvcmUgYW55IGZ1bmN0aW9ucyB0aGF0IG1pZ2h0IHVzZSB0aGVtXG4gIGNvbnN0IGNoYXJ0Q29udGFpbmVyUmVmID0gdXNlUmVmKG51bGwpO1xuICBjb25zdCBjaGFydFJlZiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgY2FuZGxlc3RpY2tTZXJpZXNSZWYgPSB1c2VSZWYobnVsbCk7XG4gIGNvbnN0IHZvbHVtZVNlcmllc1JlZiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgcHJpY2VMYWJlbFJlZiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgbWFya2VyU2VyaWVzUmVmID0gdXNlUmVmKG51bGwpO1xuICBjb25zdCByZXNpemVPYnNlcnZlclJlZiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgdGltZXJSZWYgPSB1c2VSZWYobnVsbCk7XG4gIGNvbnN0IHVwZGF0ZUludGVydmFsUmVmID0gdXNlUmVmKG51bGwpO1xuICBjb25zdCBpc01vdW50ZWRSZWYgPSB1c2VSZWYodHJ1ZSk7XG4gIGNvbnN0IGlzRmV0Y2hpbmdSZWYgPSB1c2VSZWYoZmFsc2UpO1xuICBjb25zdCBjaGFydEluaXRpYWxpemVkUmVmID0gdXNlUmVmKGZhbHNlKTtcbiAgY29uc3QgaXNSZXRyeWluZ1JlZiA9IHVzZVJlZihmYWxzZSk7XG4gIGNvbnN0IGNvbnRhaW5lclJlYWR5UmVmID0gdXNlUmVmKGZhbHNlKTtcbiAgY29uc3QgdHJhZGVzQ29udGFpbmVyUmVmID0gdXNlUmVmKG51bGwpO1xuXG4gIC8vIERlZmluZSBzdGF0ZSB2YXJpYWJsZXMgbmV4dFxuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IFtjdXJyZW50UHJpY2UsIHNldEN1cnJlbnRQcmljZV0gPSB1c2VTdGF0ZShudWxsKTtcbiAgY29uc3QgW3ByaWNlQ2hhbmdlUG9zaXRpdmUsIHNldFByaWNlQ2hhbmdlUG9zaXRpdmVdID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtsYXN0VXBkYXRlVGltZSwgc2V0TGFzdFVwZGF0ZVRpbWVdID0gdXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IFt0cmFkZXMsIHNldFRyYWRlc10gPSB1c2VTdGF0ZShbXSk7XG4gIGNvbnN0IFtpc0ZldGNoaW5nVHJhZGVzLCBzZXRJc0ZldGNoaW5nVHJhZGVzXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyBEZWZpbmUgdXRpbGl0eSBmdW5jdGlvbnMgYmVmb3JlIHRoZXkncmUgdXNlZFxuICBjb25zdCBjbGVhbnVwVGltZXJzQW5kSW50ZXJ2YWxzID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmICh0aW1lclJlZi5jdXJyZW50KSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZXJSZWYuY3VycmVudCk7XG4gICAgICB0aW1lclJlZi5jdXJyZW50ID0gbnVsbDtcbiAgICB9XG4gICAgXG4gICAgaWYgKHVwZGF0ZUludGVydmFsUmVmLmN1cnJlbnQpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodXBkYXRlSW50ZXJ2YWxSZWYuY3VycmVudCk7XG4gICAgICB1cGRhdGVJbnRlcnZhbFJlZi5jdXJyZW50ID0gbnVsbDtcbiAgICB9XG4gICAgXG4gICAgaWYgKHJlc2l6ZU9ic2VydmVyUmVmLmN1cnJlbnQpIHtcbiAgICAgIHJlc2l6ZU9ic2VydmVyUmVmLmN1cnJlbnQuZGlzY29ubmVjdCgpO1xuICAgICAgcmVzaXplT2JzZXJ2ZXJSZWYuY3VycmVudCA9IG51bGw7XG4gICAgfVxuICB9LCBbXSk7XG5cbiAgY29uc3QgY2xlYW51cENoYXJ0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChjaGFydFJlZi5jdXJyZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBjaGFydFJlZi5jdXJyZW50LnJlbW92ZSgpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIkNoYXJ0IHJlbW92ZWQgc3VjY2Vzc2Z1bGx5XCIpO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciByZW1vdmluZyBjaGFydDpcIiwgZXJyKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY2hhcnRSZWYuY3VycmVudCA9IG51bGw7XG4gICAgICBjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50ID0gbnVsbDtcbiAgICAgIHZvbHVtZVNlcmllc1JlZi5jdXJyZW50ID0gbnVsbDtcbiAgICAgIHByaWNlTGFiZWxSZWYuY3VycmVudCA9IG51bGw7XG4gICAgfVxuICB9LCBbXSk7XG5cbiAgLy8gRnVuY3Rpb24gdG8gdXBkYXRlIHRoZSBjaGFydCB3aXRoIGN1cnJlbnQgcHJpY2UgYW5kIGl0cyByZWxhdGlvbiB0byB0cmFkZSB0YXJnZXRzXG4gIGNvbnN0IHVwZGF0ZUN1cnJlbnRQcmljZUluZGljYXRvciA9IHVzZUNhbGxiYWNrKChwcmljZSkgPT4ge1xuICAgIGlmICghY2hhcnRSZWYuY3VycmVudCB8fCAhY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudCkgcmV0dXJuO1xuICAgIFxuICAgIGlmIChwcmljZUxhYmVsUmVmLmN1cnJlbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHByaWNlTGFiZWxSZWYuY3VycmVudC5hcHBseU9wdGlvbnMoe1xuICAgICAgICAgIHByaWNlLFxuICAgICAgICAgIHRpdGxlOiBgTGl2ZTogJHtmb3JtYXRQcmljZShwcmljZSwgcGFpcil9YCxcbiAgICAgICAgICBheGlzTGFiZWxWaXNpYmxlOiB0cnVlLCAvLyBBbHdheXMgc2hvdyB0aGUgbGl2ZSBwcmljZSBvbiBheGlzXG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB1cGRhdGluZyBwcmljZSBsaW5lOlwiLCBlcnIpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyBXZSd2ZSByZW1vdmVkIHRoZSB0cmFkZSBwcm9ncmVzcyBpbmRpY2F0b3IgVUksIHNvIHdlIGRvbid0IG5lZWQgdG8gY2FsY3VsYXRlXG4gICAgLy8gcHJvZ3Jlc3MgcGVyY2VudGFnZXMgdG93YXJkIHRhcmdldHMgYW55bW9yZS4gSnVzdCBsZXQgdGhlIHByaWNlIGxpbmVzIHNob3cgdmlzdWFsbHlcbiAgICAvLyB3aGVyZSB0aGUgZW50cnksIFNMIGFuZCBUUCBsZXZlbHMgYXJlIG9uIHRoZSBjaGFydC5cbiAgfSwgW3BhaXJdKTtcblxuICAvLyBEZWZpbmUgZmV0Y2hDYW5kbGVEYXRhIGJlZm9yZSBoYW5kbGVSZXRyeSB0byBhdm9pZCBjaXJjdWxhciByZWZlcmVuY2VcbiAgY29uc3QgZmV0Y2hDYW5kbGVEYXRhID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIC8vIFNraXAgaWYgYWxyZWFkeSBmZXRjaGluZ1xuICAgIGlmIChpc0ZldGNoaW5nUmVmLmN1cnJlbnQgfHwgIWlzTW91bnRlZFJlZi5jdXJyZW50KSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkZldGNoIGFscmVhZHkgaW4gcHJvZ3Jlc3Mgb3IgY29tcG9uZW50IHVubW91bnRlZCwgc2tpcHBpbmdcIik7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfVxuICAgIFxuICAgIC8vIFNraXAgaWYgbm8gY2hhcnQgcmVmZXJlbmNlIGV4aXN0c1xuICAgIGlmICghY2hhcnRSZWYuY3VycmVudCB8fCAhY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudCkge1xuICAgICAgY29uc29sZS5sb2coXCJDaGFydCByZWZlcmVuY2VzIG5vdCBhdmFpbGFibGUsIHNraXBwaW5nIGRhdGEgZmV0Y2hcIik7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfVxuICAgIFxuICAgIGNvbnNvbGUubG9nKGBGZXRjaGluZyBjYW5kbGUgZGF0YSBmb3IgJHtwYWlyfS8ke3RpbWVmcmFtZX1gKTtcbiAgICBpc0ZldGNoaW5nUmVmLmN1cnJlbnQgPSB0cnVlO1xuICAgIFxuICAgIHJldHVybiBmZXRjaChgL2FwaS9jYW5kbGVzP3BhaXI9JHtwYWlyfSZ0aW1lZnJhbWU9JHt0aW1lZnJhbWV9Jl89JHtEYXRlLm5vdygpfWAsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NhY2hlLUNvbnRyb2wnOiAnbm8tY2FjaGUsIG5vLXN0b3JlJyxcbiAgICAgICAgJ1ByYWdtYSc6ICduby1jYWNoZSdcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBUEkgZXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgIC8vIENoZWNrIGlmIGNvbXBvbmVudCBzdGlsbCBtb3VudGVkIGFuZCByZWZlcmVuY2VzIHZhbGlkXG4gICAgICAgIGlmICghaXNNb3VudGVkUmVmLmN1cnJlbnQgfHwgIWNoYXJ0UmVmLmN1cnJlbnQgfHwgIWNhbmRsZXN0aWNrU2VyaWVzUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIkNvbXBvbmVudCB1bm1vdW50ZWQgb3IgcmVmZXJlbmNlcyBsb3N0IGR1cmluZyBmZXRjaFwiKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGBSZWNlaXZlZCAke2RhdGEuY2FuZGxlcz8ubGVuZ3RoIHx8IDB9IGNhbmRsZXNgKTtcbiAgICAgICAgXG4gICAgICAgIGlmICghZGF0YS5jYW5kbGVzIHx8ICFBcnJheS5pc0FycmF5KGRhdGEuY2FuZGxlcykgfHwgZGF0YS5jYW5kbGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gdmFsaWQgY2FuZGxlIGRhdGEgcmVjZWl2ZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gRm9ybWF0IGNhbmRsZSBkYXRhIHNhZmVseVxuICAgICAgICBjb25zdCBjYW5kbGVEYXRhID0gZGF0YS5jYW5kbGVzXG4gICAgICAgICAgLmZpbHRlcihjYW5kbGUgPT4gY2FuZGxlICYmIHR5cGVvZiBjYW5kbGUudGltZSA9PT0gJ251bWJlcicpXG4gICAgICAgICAgLm1hcChjYW5kbGUgPT4gKHtcbiAgICAgICAgICAgIHRpbWU6IGNhbmRsZS50aW1lLFxuICAgICAgICAgICAgb3BlbjogTnVtYmVyKGNhbmRsZS5vKSB8fCAwLFxuICAgICAgICAgICAgaGlnaDogTnVtYmVyKGNhbmRsZS5oKSB8fCAwLFxuICAgICAgICAgICAgbG93OiBOdW1iZXIoY2FuZGxlLmwpIHx8IDAsXG4gICAgICAgICAgICBjbG9zZTogTnVtYmVyKGNhbmRsZS5jKSB8fCAwXG4gICAgICAgICAgfSkpO1xuICAgICAgICBcbiAgICAgICAgaWYgKGNhbmRsZURhdGEubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyB2YWxpZCBjYW5kbGVzIGFmdGVyIGZpbHRlcmluZycpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBTZXQgdGhlIGRhdGFcbiAgICAgICAgY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudC5zZXREYXRhKGNhbmRsZURhdGEpO1xuICAgICAgICBcbiAgICAgICAgLy8gVXBkYXRlIHByaWNlIGlmIGF2YWlsYWJsZVxuICAgICAgICBpZiAoZGF0YS5jdXJyZW50UHJpY2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGNvbnN0IG51bWVyaWNQcmljZSA9IE51bWJlcihkYXRhLmN1cnJlbnRQcmljZSk7XG4gICAgICAgICAgaWYgKCFpc05hTihudW1lcmljUHJpY2UpKSB7XG4gICAgICAgICAgICAvLyBEZXRlcm1pbmUgcHJpY2UgZGlyZWN0aW9uXG4gICAgICAgICAgICBpZiAoY3VycmVudFByaWNlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgIHNldFByaWNlQ2hhbmdlUG9zaXRpdmUobnVtZXJpY1ByaWNlID49IGN1cnJlbnRQcmljZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZXRDdXJyZW50UHJpY2UobnVtZXJpY1ByaWNlKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gVXBkYXRlIHByaWNlIGxpbmUgYW5kIHRyYWRlIHByb2dyZXNzIGluZGljYXRvcnNcbiAgICAgICAgICAgIHVwZGF0ZUN1cnJlbnRQcmljZUluZGljYXRvcihudW1lcmljUHJpY2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gRml0IGNvbnRlbnRcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjaGFydFJlZi5jdXJyZW50LnRpbWVTY2FsZSgpLmZpdENvbnRlbnQoKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZpdHRpbmcgY2hhcnQgY29udGVudDpcIiwgZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gVXBkYXRlIGxhc3QgdXBkYXRlIHRpbWVcbiAgICAgICAgc2V0TGFzdFVwZGF0ZVRpbWUobmV3IERhdGUoKSk7XG4gICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICAgIHNldEVycm9yKG51bGwpO1xuICAgICAgICBcbiAgICAgICAgLy8gRW5zdXJlIGNoYXJ0IGlzIHNob3dpbmcgYXBwcm9wcmlhdGUgcHJpY2UgcmFuZ2VcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBZGp1c3QgdGhlIHZpc2libGUgcmFuZ2UgdG8gZW5zdXJlIHdlIHNlZSBlbm91Z2ggcHJpY2UgbGV2ZWxzXG4gICAgICAgICAgY29uc3QgdmlzaWJsZVJhbmdlID0gY2hhcnRSZWYuY3VycmVudC50aW1lU2NhbGUoKS5nZXRWaXNpYmxlUmFuZ2UoKTtcbiAgICAgICAgICBpZiAodmlzaWJsZVJhbmdlKSB7XG4gICAgICAgICAgICBjb25zdCBwcmljZVNjYWxlID0gY2hhcnRSZWYuY3VycmVudC5wcmljZVNjYWxlKCdyaWdodCcpO1xuICAgICAgICAgICAgaWYgKHByaWNlU2NhbGUpIHtcbiAgICAgICAgICAgICAgLy8gRm9yY2UgcHJpY2Ugc2NhbGUgdXBkYXRlXG4gICAgICAgICAgICAgIHByaWNlU2NhbGUuYXBwbHlPcHRpb25zKHtcbiAgICAgICAgICAgICAgICBhdXRvU2NhbGU6IHRydWUsXG4gICAgICAgICAgICAgICAgbW9kZTogMCxcbiAgICAgICAgICAgICAgICB0aWNrc1Zpc2libGU6IHRydWUsXG4gICAgICAgICAgICAgICAgc2NhbGVNYXJnaW5zOiB7XG4gICAgICAgICAgICAgICAgICB0b3A6IDAuMSwgXG4gICAgICAgICAgICAgICAgICBib3R0b206IDAuMSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gRml0IGNvbnRlbnQgd2l0aCBhbmltYXRpb25cbiAgICAgICAgICBjaGFydFJlZi5jdXJyZW50LnRpbWVTY2FsZSgpLmZpdENvbnRlbnQoKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFkanVzdGluZyBwcmljZSBzY2FsZTpcIiwgZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgY2FuZGxlIGRhdGE6JywgZXJyb3IpO1xuICAgICAgICBpZiAoaXNNb3VudGVkUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICBzZXRFcnJvcihgRmFpbGVkIHRvIGxvYWQgZGF0YTogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9KVxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICBpc0ZldGNoaW5nUmVmLmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgIH0pO1xuICB9LCBbcGFpciwgdGltZWZyYW1lLCBjdXJyZW50UHJpY2VdKTtcblxuICAvLyBEZWZpbmUgZmV0Y2hUcmFkZXMgZnVuY3Rpb24gdG8gZ2V0IHRyYWRlIGRhdGFcbiAgY29uc3QgZmV0Y2hUcmFkZXMgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKGlzRmV0Y2hpbmdUcmFkZXMgfHwgIWlzTW91bnRlZFJlZi5jdXJyZW50KSB7XG4gICAgICBjb25zb2xlLmxvZyhcIlRyYWRlcyBmZXRjaCBhbHJlYWR5IGluIHByb2dyZXNzIG9yIGNvbXBvbmVudCB1bm1vdW50ZWQsIHNraXBwaW5nXCIpO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgICBcbiAgICBjb25zb2xlLmxvZyhgRmV0Y2hpbmcgdHJhZGVzIGZvciAke3BhaXJ9LyR7dGltZWZyYW1lfWApO1xuICAgIHNldElzRmV0Y2hpbmdUcmFkZXModHJ1ZSk7XG4gICAgXG4gICAgcmV0dXJuIGZldGNoKGAvYXBpL3RyYWRlcz9wYWlyPSR7cGFpcn0mdGltZWZyYW1lPSR7dGltZWZyYW1lfSZfPSR7RGF0ZS5ub3coKX1gLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDYWNoZS1Db250cm9sJzogJ25vLWNhY2hlLCBuby1zdG9yZScsXG4gICAgICAgICdQcmFnbWEnOiAnbm8tY2FjaGUnXG4gICAgICB9XG4gICAgfSlcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQVBJIGVycm9yOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgICAgfSlcbiAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICBpZiAoIWlzTW91bnRlZFJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJDb21wb25lbnQgdW5tb3VudGVkIGR1cmluZyB0cmFkZXMgZmV0Y2hcIik7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyhgUmVjZWl2ZWQgJHtkYXRhLnRyYWRlcz8ubGVuZ3RoIHx8IDB9IHRyYWRlc2ApO1xuICAgICAgICBcbiAgICAgICAgaWYgKCFkYXRhLnRyYWRlcyB8fCAhQXJyYXkuaXNBcnJheShkYXRhLnRyYWRlcykpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHZhbGlkIHRyYWRlIGRhdGEgcmVjZWl2ZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgc2V0VHJhZGVzKGRhdGEudHJhZGVzKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFVwZGF0ZSBtYXJrZXJzIG9uIGNoYXJ0IGlmIGNoYXJ0IGlzIGluaXRpYWxpemVkXG4gICAgICAgIGlmIChjaGFydFJlZi5jdXJyZW50ICYmIGNhbmRsZXN0aWNrU2VyaWVzUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICB1cGRhdGVUcmFkZU1hcmtlcnMoZGF0YS50cmFkZXMpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gZGF0YS50cmFkZXM7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgdHJhZGUgZGF0YTonLCBlcnJvcik7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH0pXG4gICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgIHNldElzRmV0Y2hpbmdUcmFkZXMoZmFsc2UpO1xuICAgICAgfSk7XG4gIH0sIFtwYWlyLCB0aW1lZnJhbWVdKTtcbiAgXG4gIC8vIEZ1bmN0aW9uIHRvIHVwZGF0ZSB0cmFkZSBtYXJrZXJzIG9uIHRoZSBjaGFydFxuICBjb25zdCB1cGRhdGVUcmFkZU1hcmtlcnMgPSB1c2VDYWxsYmFjaygodHJhZGVEYXRhKSA9PiB7XG4gICAgaWYgKCFjaGFydFJlZi5jdXJyZW50KSByZXR1cm47XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBoYXZlIHZhbGlkIHRyYWRlIGRhdGFcbiAgICAgIGlmICghdHJhZGVEYXRhIHx8ICFBcnJheS5pc0FycmF5KHRyYWRlRGF0YSkgfHwgdHJhZGVEYXRhLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAvLyBDbGVhciBtYXJrZXJzIGlmIG5vIHRyYWRlc1xuICAgICAgICBpZiAobWFya2VyU2VyaWVzUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICBtYXJrZXJTZXJpZXNSZWYuY3VycmVudC5zZXRNYXJrZXJzKFtdKTtcbiAgICAgICAgfSBlbHNlIGlmIChjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50KSB7XG4gICAgICAgICAgY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudC5zZXRNYXJrZXJzKFtdKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEZpbHRlciB0cmFkZXMgZm9yIHRoaXMgcGFpciBhbmQgdGltZWZyYW1lXG4gICAgICBjb25zdCByZWxldmFudFRyYWRlcyA9IHRyYWRlRGF0YS5maWx0ZXIodHJhZGUgPT4gXG4gICAgICAgIHRyYWRlLnBhaXIgPT09IHBhaXIgJiYgKHRyYWRlLnRpbWVmcmFtZSA9PT0gdGltZWZyYW1lIHx8ICF0aW1lZnJhbWUpXG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZyhgQ3JlYXRpbmcgbWFya2VycyBmb3IgJHtyZWxldmFudFRyYWRlcy5sZW5ndGh9IHJlbGV2YW50IHRyYWRlc2ApO1xuICAgICAgXG4gICAgICAvLyBDcmVhdGUgbWFya2VycyBmb3IgZW50cnkvZXhpdCBwb2ludHNcbiAgICAgIGNvbnN0IG1hcmtlcnMgPSByZWxldmFudFRyYWRlcy5mbGF0TWFwKHRyYWRlID0+IHtcbiAgICAgICAgY29uc3QgdGltZSA9IG5ldyBEYXRlKHRyYWRlLnRpbWVzdGFtcCkuZ2V0VGltZSgpIC8gMTAwMDtcbiAgICAgICAgY29uc3QgbWFya2VycyA9IFtdO1xuICAgICAgICBcbiAgICAgICAgLy8gRW50cnkgbWFya2VyXG4gICAgICAgIG1hcmtlcnMucHVzaCh7XG4gICAgICAgICAgdGltZSxcbiAgICAgICAgICBwb3NpdGlvbjogdHJhZGUuZGlyZWN0aW9uID09PSAnYnV5JyA/ICdiZWxvd0JhcicgOiAnYWJvdmVCYXInLFxuICAgICAgICAgIGNvbG9yOiB0cmFkZS5kaXJlY3Rpb24gPT09ICdidXknID8gJyMxMGI5ODEnIDogJyNlZjQ0NDQnLFxuICAgICAgICAgIHNoYXBlOiB0cmFkZS5kaXJlY3Rpb24gPT09ICdidXknID8gJ2Fycm93VXAnIDogJ2Fycm93RG93bicsXG4gICAgICAgICAgdGV4dDogYEVudHJ5ICR7Zm9ybWF0UHJpY2UodHJhZGUuZW50cnksIHBhaXIpfWAsXG4gICAgICAgICAgc2l6ZTogMlxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIEV4aXQgbWFya2VyIChmb3IgY2xvc2VkIHRyYWRlcylcbiAgICAgICAgaWYgKHRyYWRlLnN0YXR1cyAhPT0gJ29wZW4nKSB7XG4gICAgICAgICAgbWFya2Vycy5wdXNoKHtcbiAgICAgICAgICAgIHRpbWU6IHRpbWUgKyAoNjAgKiA2MCksIC8vIEFkZCBzb21lIHRpbWUgb2Zmc2V0IGZvciB2aXN1YWxpemF0aW9uXG4gICAgICAgICAgICBwb3NpdGlvbjogdHJhZGUuZGlyZWN0aW9uID09PSAnYnV5JyA/ICdhYm92ZUJhcicgOiAnYmVsb3dCYXInLFxuICAgICAgICAgICAgY29sb3I6IHRyYWRlLnN0YXR1cyA9PT0gJ3dpbicgPyAnIzEwYjk4MScgOiAnI2VmNDQ0NCcsXG4gICAgICAgICAgICBzaGFwZTogJ2NpcmNsZScsXG4gICAgICAgICAgICB0ZXh0OiBgRXhpdCAoJHt0cmFkZS5zdGF0dXMudG9VcHBlckNhc2UoKX0pYCxcbiAgICAgICAgICAgIHNpemU6IDJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIG1hcmtlcnM7XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coYFNldHRpbmcgJHttYXJrZXJzLmxlbmd0aH0gbWFya2VycyBvbiBjaGFydGApO1xuICAgICAgXG4gICAgICAvLyBTZXQgbWFya2VycyB0byB0aGUgc2VyaWVzXG4gICAgICBpZiAobWFya2VyU2VyaWVzUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBtYXJrZXJTZXJpZXNSZWYuY3VycmVudC5zZXRNYXJrZXJzKG1hcmtlcnMpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igc2V0dGluZyBtYXJrZXJzIG9uIG1hcmtlciBzZXJpZXM6XCIsIGVycik7XG4gICAgICAgICAgLy8gRmFsbCBiYWNrIHRvIGNhbmRsZXN0aWNrIHNlcmllc1xuICAgICAgICAgIGlmIChjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICBjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50LnNldE1hcmtlcnMobWFya2Vycyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGNhbmRsZXN0aWNrU2VyaWVzUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudC5zZXRNYXJrZXJzKG1hcmtlcnMpO1xuICAgICAgfVxuXG4gICAgICAvLyBBZGQgcHJpY2UgbGluZXMgZm9yIG9wZW4gdHJhZGVzIHRvIHZpc3VhbGl6ZSBlbnRyeS9leGl0IGxldmVsc1xuICAgICAgaWYgKGNhbmRsZXN0aWNrU2VyaWVzUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgLy8gRmlyc3QsIHRyeSB0byByZW1vdmUgYW55IGV4aXN0aW5nIHRyYWRlIHByaWNlIGxpbmVzXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVXNlIGEgdHJ5LWNhdGNoIGJsb2NrIHNpbmNlIHRoZSBwcmljZUxpbmVzIG1ldGhvZCBtaWdodCBub3QgZXhpc3RcbiAgICAgICAgICAvLyBJbnN0ZWFkIG9mIHRyeWluZyB0byBnZXQgYWxsIHByaWNlIGxpbmVzLCBqdXN0IGF0dGVtcHQgdG8gcmVtb3ZlIHRoZSBvbmVzIHdlIGtub3cgYWJvdXRcbiAgICAgICAgICAvLyBieSB0aGVpciBJRHMgKHdoaWNoIHdlJ2xsIHRyYWNrIGluIHN0YXRlKVxuICAgICAgICAgIGNvbnN0IG9wZW5UcmFkZXMgPSByZWxldmFudFRyYWRlcy5maWx0ZXIodHJhZGUgPT4gdHJhZGUuc3RhdHVzID09PSAnb3BlbicpO1xuICAgICAgICAgIG9wZW5UcmFkZXMuZm9yRWFjaCh0cmFkZSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAvLyBUcnkgdG8gcmVtb3ZlIGV4aXN0aW5nIGxpbmVzIGZvciB0aGlzIHRyYWRlIElEIGlmIHRoZXkgZXhpc3RcbiAgICAgICAgICAgICAgY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudC5yZW1vdmVQcmljZUxpbmUodHJhZGUuaWQgKyAnX2VudHJ5Jyk7XG4gICAgICAgICAgICAgIGNhbmRsZXN0aWNrU2VyaWVzUmVmLmN1cnJlbnQucmVtb3ZlUHJpY2VMaW5lKHRyYWRlLmlkICsgJ19zbCcpO1xuICAgICAgICAgICAgICBjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50LnJlbW92ZVByaWNlTGluZSh0cmFkZS5pZCArICdfdHAnKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAvLyBJZ25vcmUgZXJyb3JzIGZyb20gcmVtb3Zpbmcgbm9uLWV4aXN0ZW50IGxpbmVzXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciByZW1vdmluZyBleGlzdGluZyBwcmljZSBsaW5lczpcIiwgZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gQWRkIG5ldyBwcmljZSBsaW5lcyBmb3Igb3BlbiB0cmFkZXNcbiAgICAgICAgY29uc3Qgb3BlblRyYWRlcyA9IHJlbGV2YW50VHJhZGVzLmZpbHRlcih0cmFkZSA9PiB0cmFkZS5zdGF0dXMgPT09ICdvcGVuJyk7XG4gICAgICAgIG9wZW5UcmFkZXMuZm9yRWFjaCh0cmFkZSA9PiB7XG4gICAgICAgICAgLy8gRW50cnkgcHJpY2UgbGluZVxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBFbnRyeSBwcmljZSBsaW5lIC0gUmVtb3ZlZCB0byBlbGltaW5hdGUgZ3JlZW4gaG9yaXpvbnRhbCBsaW5lIHdoZW4gZGlyZWN0aW9uIGlzICdidXknXG4gICAgICAgICAgICAvLyBjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50LmNyZWF0ZVByaWNlTGluZSh7XG4gICAgICAgICAgICAvLyAgIHByaWNlOiB0cmFkZS5lbnRyeSxcbiAgICAgICAgICAgIC8vICAgY29sb3I6IHRyYWRlLmRpcmVjdGlvbiA9PT0gJ2J1eScgPyAnIzEwYjk4MScgOiAnI2VmNDQ0NCcsXG4gICAgICAgICAgICAvLyAgIGxpbmVXaWR0aDogMixcbiAgICAgICAgICAgIC8vICAgbGluZVN0eWxlOiAxLCAvLyBTb2xpZFxuICAgICAgICAgICAgLy8gICBheGlzTGFiZWxWaXNpYmxlOiBmYWxzZSwgLy8gSGlkZSBheGlzIGxhYmVsIHRvIHByZXZlbnQgY2x1dHRlclxuICAgICAgICAgICAgLy8gICB0aXRsZTogYEVudHJ5ICR7Zm9ybWF0UHJpY2UodHJhZGUuZW50cnksIHBhaXIpfWAsXG4gICAgICAgICAgICAvLyAgIGlkOiB0cmFkZS5pZCArICdfZW50cnknIC8vIFVzZSBhIHNpbXBsZXIgSUQgZm9ybWF0XG4gICAgICAgICAgICAvLyB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gTm8gbG9uZ2VyIHNob3dpbmcgc3RvcCBsb3NzIGxpbmVcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gVGFrZSBQcm9maXQgcHJpY2UgbGluZSAtIFJlbW92ZWQgdG8gZWxpbWluYXRlIGdyZWVuIGhvcml6b250YWwgbGluZVxuICAgICAgICAgICAgLy8gY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudC5jcmVhdGVQcmljZUxpbmUoe1xuICAgICAgICAgICAgLy8gICBwcmljZTogdHJhZGUudGFrZVByb2ZpdCxcbiAgICAgICAgICAgIC8vICAgY29sb3I6ICcjMTBiOTgxJywgLy8gR3JlZW5cbiAgICAgICAgICAgIC8vICAgbGluZVdpZHRoOiAyLFxuICAgICAgICAgICAgLy8gICBsaW5lU3R5bGU6IDMsIC8vIERvdHRlZFxuICAgICAgICAgICAgLy8gICBheGlzTGFiZWxWaXNpYmxlOiBmYWxzZSwgLy8gSGlkZSBheGlzIGxhYmVsIHRvIHByZXZlbnQgY2x1dHRlclxuICAgICAgICAgICAgLy8gICB0aXRsZTogYFRQICR7Zm9ybWF0UHJpY2UodHJhZGUudGFrZVByb2ZpdCwgcGFpcil9YCxcbiAgICAgICAgICAgIC8vICAgaWQ6IHRyYWRlLmlkICsgJ190cCdcbiAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFkZGluZyB0cmFkZSBwcmljZSBsaW5lczpcIiwgZXJyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHVwZGF0aW5nIHRyYWRlIG1hcmtlcnM6XCIsIGVycik7XG4gICAgfVxuICB9LCBbcGFpciwgdGltZWZyYW1lXSk7XG5cbiAgLy8gTm93IGRlZmluZSBoYW5kbGVSZXRyeSBhZnRlciBmZXRjaENhbmRsZURhdGEgaXMgZGVmaW5lZFxuICBjb25zdCBoYW5kbGVSZXRyeSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIlJldHJ5IGJ1dHRvbiBjbGlja2VkLCBoYXJkIHJlc2V0XCIpO1xuICAgIFxuICAgIGlmIChpc1JldHJ5aW5nUmVmLmN1cnJlbnQpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiQWxyZWFkeSByZXRyeWluZywgaWdub3JpbmcgZHVwbGljYXRlIHJlcXVlc3RcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGlzUmV0cnlpbmdSZWYuY3VycmVudCA9IHRydWU7XG4gICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgIHNldEVycm9yKG51bGwpO1xuICAgIFxuICAgIC8vIENsZWFuIHVwIGV4aXN0aW5nIHJlc291cmNlc1xuICAgIGNsZWFudXBDaGFydCgpO1xuICAgIGNsZWFudXBUaW1lcnNBbmRJbnRlcnZhbHMoKTtcbiAgICBcbiAgICAvLyBDcmVhdGUgY2hhcnQgd2l0aCBkZWxheSB0byBlbnN1cmUgY2xlYW4gc3RhdGVcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmICghY2hhcnRDb250YWluZXJSZWYuY3VycmVudCB8fCAhaXNNb3VudGVkUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgc2V0RXJyb3IoXCJDaGFydCBjb250YWluZXIgbm90IGF2YWlsYWJsZVwiKTtcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgaXNSZXRyeWluZ1JlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gY2hhcnRDb250YWluZXJSZWYuY3VycmVudDtcbiAgICAgICAgXG4gICAgICAgIC8vIFNldCBjb250YWluZXIgc3R5bGVzXG4gICAgICAgIGNvbnRhaW5lci5zdHlsZS53aWR0aCA9ICcxMDAlJztcbiAgICAgICAgY29udGFpbmVyLnN0eWxlLmhlaWdodCA9ICcxMDAlJztcbiAgICAgICAgY29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcbiAgICAgICAgY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICBcbiAgICAgICAgLy8gR2V0IGRpbWVuc2lvbnNcbiAgICAgICAgY29uc3Qgd2lkdGggPSBNYXRoLm1heChjb250YWluZXIuY2xpZW50V2lkdGggfHwgMzAwLCAzMDApO1xuICAgICAgICBjb25zdCBoZWlnaHQgPSBNYXRoLm1heChjb250YWluZXIuY2xpZW50SGVpZ2h0IHx8IDMwMCwgMzAwKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGBDcmVhdGluZyBjaGFydCB3aXRoIGRpbWVuc2lvbnM6ICR7d2lkdGh9eCR7aGVpZ2h0fWApO1xuICAgICAgICBcbiAgICAgICAgLy8gQ3JlYXRlIGNoYXJ0IHdpdGggbWluaW1hbCBvcHRpb25zXG4gICAgICAgIGNvbnN0IGNoYXJ0ID0gY3JlYXRlQ2hhcnQoY29udGFpbmVyLCB7XG4gICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgaGVpZ2h0LFxuICAgICAgICAgIGxheW91dDoge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogeyBjb2xvcjogJyMxMjEyMTInIH0sXG4gICAgICAgICAgICB0ZXh0Q29sb3I6ICcjZDFkNGRjJyxcbiAgICAgICAgICAgIGZvbnRTaXplOiAxMixcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdyaWQ6IHtcbiAgICAgICAgICAgIHZlcnRMaW5lczoge1xuICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoNDIsIDQ2LCA1NywgMC40KScsXG4gICAgICAgICAgICAgIHN0eWxlOiAxLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhvcnpMaW5lczoge1xuICAgICAgICAgICAgICBjb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICAgICAgICAgICAgc3R5bGU6IDEsXG4gICAgICAgICAgICAgIHZpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHJpZ2h0UHJpY2VTY2FsZToge1xuICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDE5NywgMjAzLCAyMDYsIDAuMyknLFxuICAgICAgICAgICAgYm9yZGVyVmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHNjYWxlTWFyZ2luczoge1xuICAgICAgICAgICAgICB0b3A6IDAuMSxcbiAgICAgICAgICAgICAgYm90dG9tOiAwLjEsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gRW5zdXJlIG1vcmUgcHJpY2UgbGFiZWxzIG9uIHRoZSB5LWF4aXNcbiAgICAgICAgICAgIG1pbmltdW1IZWlnaHQ6IDIwLCAvLyBFdmVuIHNtYWxsZXIgdmFsdWUgPSBtb3JlIGxhYmVsc1xuICAgICAgICAgICAgdGV4dENvbG9yOiAnI2QxZDRkYycsXG4gICAgICAgICAgICBmb250U2l6ZTogMTEsXG4gICAgICAgICAgICBhbGlnbkxhYmVsczogdHJ1ZSxcbiAgICAgICAgICAgIG1vZGU6IDAsIC8vIDAgPSBOb3JtYWwgaXMgYmV0dGVyIGZvciBzdGFuZGFyZCBwcmljZSBkaXNwbGF5XG4gICAgICAgICAgICBhdXRvU2NhbGU6IHRydWUsXG4gICAgICAgICAgICBlbnRpcmVUZXh0T25seTogZmFsc2UsXG4gICAgICAgICAgICB0aWNrc1Zpc2libGU6IHRydWUsXG4gICAgICAgICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgdGltZVNjYWxlOiB7XG4gICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMTk3LCAyMDMsIDIwNiwgMC4zKScsXG4gICAgICAgICAgICB0aW1lVmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHNlY29uZHNWaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHRpY2tNYXJrRm9ybWF0dGVyOiAodGltZSwgdGlja01hcmtUeXBlLCBsb2NhbGUpID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRpbWUgKiAxMDAwKTtcbiAgICAgICAgICAgICAgLy8gRm9ybWF0IGJhc2VkIG9uIHRpbWVmcmFtZVxuICAgICAgICAgICAgICBpZiAodGltZWZyYW1lID09PSAnMWQnIHx8IHRpbWVmcmFtZSA9PT0gJ0RhaWx5JyB8fCB0aW1lZnJhbWUgPT09ICdXZWVrbHknKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCdlbi1VUycsIHsgbW9udGg6ICdzaG9ydCcsIGRheTogJ251bWVyaWMnIH0pO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhvdXJzID0gZGF0ZS5nZXRIb3VycygpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTtcbiAgICAgICAgICAgICAgICBjb25zdCBtaW51dGVzID0gZGF0ZS5nZXRNaW51dGVzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBgJHtob3Vyc306JHttaW51dGVzfWA7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjcm9zc2hhaXI6IHtcbiAgICAgICAgICAgIG1vZGU6IENyb3NzaGFpck1vZGUuTm9ybWFsLFxuICAgICAgICAgICAgdmVydExpbmU6IHtcbiAgICAgICAgICAgICAgY29sb3I6ICdyZ2JhKDIyNCwgMjI3LCAyMzUsIDAuNCknLFxuICAgICAgICAgICAgICB3aWR0aDogMSxcbiAgICAgICAgICAgICAgc3R5bGU6IDEsXG4gICAgICAgICAgICAgIHZpc2libGU6IHRydWUsXG4gICAgICAgICAgICAgIGxhYmVsVmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBob3J6TGluZToge1xuICAgICAgICAgICAgICBjb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICAgICAgICAgICAgd2lkdGg6IDEsXG4gICAgICAgICAgICAgIHN0eWxlOiAxLFxuICAgICAgICAgICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgbGFiZWxWaXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIC8vIEhhbmRsZSB3YXRlcm1hcmtcbiAgICAgICAgICB3YXRlcm1hcms6IHtcbiAgICAgICAgICAgIHZpc2libGU6IGZhbHNlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgLy8gRnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGFwcHJvcHJpYXRlIHByaWNlIHByZWNpc2lvbiBiYXNlZCBvbiBwYWlyIGFuZCBjdXJyZW50IHByaWNlIGxldmVsXG4gICAgICAgIGNvbnN0IGRldGVybWluZVByaWNlUHJlY2lzaW9uID0gKHBhaXIsIGN1cnJlbnRQcmljZSkgPT4ge1xuICAgICAgICAgIGlmIChwYWlyLmluY2x1ZGVzKCdKUFknKSkgcmV0dXJuIDM7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gRm9yIHBhaXJzIHdpdGggdmVyeSBzbWFsbCBwcmljZSBtb3ZlbWVudHMgKGxpa2Ugc29tZSBjcnlwdG8gcGFpcnMpXG4gICAgICAgICAgaWYgKGN1cnJlbnRQcmljZSA8IDAuMDEpIHJldHVybiA4O1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIERlZmF1bHQgZm9yIGZvcmV4IHBhaXJzIGxpa2UgRVVSX1VTRFxuICAgICAgICAgIHJldHVybiA1O1xuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgLy8gR2V0IGFwcHJvcHJpYXRlIHByZWNpc2lvbiBmb3IgdGhpcyBwYWlyXG4gICAgICAgIGNvbnN0IHByZWNpc2lvbiA9IGRldGVybWluZVByaWNlUHJlY2lzaW9uKHBhaXIsIGN1cnJlbnRQcmljZSB8fCAxLjApO1xuICAgICAgICBcbiAgICAgICAgY29uc3Qgc2VyaWVzID0gY2hhcnQuYWRkQ2FuZGxlc3RpY2tTZXJpZXMoe1xuICAgICAgICAgIHVwQ29sb3I6ICcjMTBiOTgxJywgXG4gICAgICAgICAgZG93bkNvbG9yOiAnI2VmNDQ0NCcsXG4gICAgICAgICAgYm9yZGVyVmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgd2lja1VwQ29sb3I6ICcjMTBiOTgxJyxcbiAgICAgICAgICB3aWNrRG93bkNvbG9yOiAnI2VmNDQ0NCcsXG4gICAgICAgICAgcHJpY2VGb3JtYXQ6IHtcbiAgICAgICAgICAgIHR5cGU6ICdwcmljZScsXG4gICAgICAgICAgICBwcmVjaXNpb246IHByZWNpc2lvbixcbiAgICAgICAgICAgIG1pbk1vdmU6IE1hdGgucG93KDEwLCAtcHJlY2lzaW9uKSwgLy8gRHluYW1pY2FsbHkgc2V0IG1pbmltdW0gcHJpY2UgbW92ZW1lbnRcbiAgICAgICAgICB9LFxuICAgICAgICAgIC8vIEFkZGl0aW9uYWwgZm9ybWF0dGluZyBmb3IgcHJpY2UgbGFiZWxzXG4gICAgICAgICAgbGFzdFZhbHVlVmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICBwcmljZUxpbmVWaXNpYmxlOiB0cnVlLFxuICAgICAgICAgIHByaWNlTGluZVdpZHRoOiAxLFxuICAgICAgICAgIHByaWNlTGluZUNvbG9yOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpJyxcbiAgICAgICAgICBwcmljZUxpbmVTdHlsZTogTGluZVN0eWxlLkRvdHRlZCxcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAvLyBBZnRlciBjcmVhdGluZyB0aGUgY2hhcnQsIG1ha2Ugc3VyZSB0aGUgcmlnaHRQcmljZVNjYWxlIGlzIHByb3Blcmx5IGNvbmZpZ3VyZWRcbiAgICAgICAgY2hhcnQuYXBwbHlPcHRpb25zKHtcbiAgICAgICAgICByaWdodFByaWNlU2NhbGU6IHtcbiAgICAgICAgICAgIGF1dG9TY2FsZTogdHJ1ZSxcbiAgICAgICAgICAgIG1vZGU6IDAsXG4gICAgICAgICAgICBpbnZlcnRTY2FsZTogZmFsc2UsXG4gICAgICAgICAgICBhbGlnbkxhYmVsczogdHJ1ZSxcbiAgICAgICAgICAgIGJvcmRlclZpc2libGU6IHRydWUsXG4gICAgICAgICAgICBzY2FsZU1hcmdpbnM6IHtcbiAgICAgICAgICAgICAgdG9wOiAwLjEsIFxuICAgICAgICAgICAgICBib3R0b206IDAuMSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aWNrc1Zpc2libGU6IHRydWUsXG4gICAgICAgICAgICAvLyBBZGp1c3QgdGhlIG51bWJlciBvZiBwcmljZSBsYWJlbHNcbiAgICAgICAgICAgIG1pbmltdW1IZWlnaHQ6IDIwLFxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAvLyBGb3JjZSBwcmljZSBmb3JtYXQgdXBkYXRlXG4gICAgICAgIHNlcmllcy5hcHBseU9wdGlvbnMoe1xuICAgICAgICAgIHByaWNlRm9ybWF0OiB7XG4gICAgICAgICAgICB0eXBlOiAncHJpY2UnLFxuICAgICAgICAgICAgcHJlY2lzaW9uOiBwcmVjaXNpb24sXG4gICAgICAgICAgICBtaW5Nb3ZlOiBNYXRoLnBvdygxMCwgLXByZWNpc2lvbiksXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCB2b2x1bWUgaGlzdG9ncmFtIHdpdGggcHJvcGVyIGNvbmZpZ3VyYXRpb25cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCB2b2x1bWVTZXJpZXMgPSBjaGFydC5hZGRIaXN0b2dyYW1TZXJpZXMoe1xuICAgICAgICAgICAgcHJpY2VTY2FsZUlkOiAnJywgLy8gVXNlIGRlZmF1bHQgc2NhbGVcbiAgICAgICAgICAgIHNjYWxlTWFyZ2luczoge1xuICAgICAgICAgICAgICB0b3A6IDAuODUsIC8vIFBvc2l0aW9uIHZvbHVtZSBhdCB0aGUgYm90dG9tXG4gICAgICAgICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwcmljZUZvcm1hdDoge1xuICAgICAgICAgICAgICB0eXBlOiAndm9sdW1lJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb2xvcjogJ3JnYmEoNzYsIDE3NSwgODAsIDAuNSknLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIHZvbHVtZVNlcmllc1JlZi5jdXJyZW50ID0gdm9sdW1lU2VyaWVzO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGFkZCB2b2x1bWUgc2VyaWVzOlwiLCBlcnIpO1xuICAgICAgICAgIC8vIENvbnRpbnVlIHdpdGhvdXQgdm9sdW1lIHNlcmllc1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBTYXZlIHJlZmVyZW5jZXNcbiAgICAgICAgY2hhcnRSZWYuY3VycmVudCA9IGNoYXJ0O1xuICAgICAgICBjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50ID0gc2VyaWVzO1xuICAgICAgICBcbiAgICAgICAgLy8gQWRkIG1hcmtlciBzZXJpZXMgZm9yIHRyYWRlIGVudHJ5L2V4aXQgcG9pbnRzXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgbWFya2VyU2VyaWVzID0gY2hhcnQuYWRkTGluZVNlcmllcyh7XG4gICAgICAgICAgICBsaW5lVmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICBsYXN0VmFsdWVWaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHByaWNlTGluZVZpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgYmFzZUxpbmVWaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGNyb3NzaGFpck1hcmtlclZpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgcHJpY2VGb3JtYXQ6IHtcbiAgICAgICAgICAgICAgdHlwZTogJ3ByaWNlJyxcbiAgICAgICAgICAgICAgcHJlY2lzaW9uOiBwcmVjaXNpb24sXG4gICAgICAgICAgICAgIG1pbk1vdmU6IE1hdGgucG93KDEwLCAtcHJlY2lzaW9uKSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICBtYXJrZXJTZXJpZXNSZWYuY3VycmVudCA9IG1hcmtlclNlcmllcztcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBJZiB3ZSBhbHJlYWR5IGhhdmUgdHJhZGVzLCBpbW1lZGlhdGVseSBhZGQgbWFya2Vyc1xuICAgICAgICAgIGlmICh0cmFkZXMgJiYgdHJhZGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHVwZGF0ZVRyYWRlTWFya2Vycyh0cmFkZXMpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoZXh0ZXJuYWxUcmFkZXMgJiYgQXJyYXkuaXNBcnJheShleHRlcm5hbFRyYWRlcykpIHtcbiAgICAgICAgICAgIC8vIE9yIHVzZSBleHRlcm5hbCB0cmFkZXMgaWYgYXZhaWxhYmxlXG4gICAgICAgICAgICBjb25zdCByZWxldmFudFRyYWRlcyA9IGV4dGVybmFsVHJhZGVzLmZpbHRlcih0cmFkZSA9PiBcbiAgICAgICAgICAgICAgdHJhZGUucGFpciA9PT0gcGFpciAmJiAodHJhZGUudGltZWZyYW1lID09PSB0aW1lZnJhbWUgfHwgIXRpbWVmcmFtZSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICB1cGRhdGVUcmFkZU1hcmtlcnMocmVsZXZhbnRUcmFkZXMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBhZGQgbWFya2VyIHNlcmllczpcIiwgZXJyKTtcbiAgICAgICAgICAvLyBDb250aW51ZSB3aXRob3V0IG1hcmtlciBzZXJpZXMsIHdpbGwgZmFsbCBiYWNrIHRvIGNhbmRsZXN0aWNrIHNlcmllcyBmb3IgbWFya2Vyc1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBBZGQgcHJpY2UgbGluZVxuICAgICAgICBjb25zdCBwcmljZUxpbmUgPSBzZXJpZXMuY3JlYXRlUHJpY2VMaW5lKHtcbiAgICAgICAgICBwcmljZTogMCxcbiAgICAgICAgICBjb2xvcjogJyMyMTk2RjMnLFxuICAgICAgICAgIGxpbmVXaWR0aDogMSxcbiAgICAgICAgICBheGlzTGFiZWxWaXNpYmxlOiB0cnVlLFxuICAgICAgICAgIHRpdGxlOiAnTGl2ZScsXG4gICAgICAgIH0pO1xuICAgICAgICBwcmljZUxhYmVsUmVmLmN1cnJlbnQgPSBwcmljZUxpbmU7XG4gICAgICAgIFxuICAgICAgICAvLyBTZXQgdXAgcmVzaXplIGhhbmRsZXJcbiAgICAgICAgY29uc3QgaGFuZGxlUmVzaXplID0gKCkgPT4ge1xuICAgICAgICAgIGlmICghY2hhcnRSZWYuY3VycmVudCB8fCAhY29udGFpbmVyKSByZXR1cm47XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc3QgbmV3V2lkdGggPSBjb250YWluZXIuY2xpZW50V2lkdGg7XG4gICAgICAgICAgY29uc3QgbmV3SGVpZ2h0ID0gY29udGFpbmVyLmNsaWVudEhlaWdodDtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAobmV3V2lkdGggPiAwICYmIG5ld0hlaWdodCA+IDApIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIGNoYXJ0UmVmLmN1cnJlbnQucmVzaXplKG5ld1dpZHRoLCBuZXdIZWlnaHQpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciByZXNpemluZyBjaGFydDpcIiwgZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvLyBTZXQgdXAgcmVzaXplIG9ic2VydmVyXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmVzaXplT2JzZXJ2ZXJSZWYuY3VycmVudCA9IG5ldyBSZXNpemVPYnNlcnZlcihoYW5kbGVSZXNpemUpO1xuICAgICAgICAgIHJlc2l6ZU9ic2VydmVyUmVmLmN1cnJlbnQub2JzZXJ2ZShjb250YWluZXIpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igc2V0dGluZyB1cCBSZXNpemVPYnNlcnZlcjpcIiwgZXJyKTtcbiAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlUmVzaXplKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gTG9hZCBkYXRhXG4gICAgICAgIGZldGNoQ2FuZGxlRGF0YSgpXG4gICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiSW5pdGlhbCBkYXRhIGxvYWRlZCBzdWNjZXNzZnVsbHlcIik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIElmIHdlIGhhdmUgdm9sdW1lIGRhdGEsIHNldCB1cCB2b2x1bWUgc2VyaWVzXG4gICAgICAgICAgICBpZiAoZGF0YSAmJiBkYXRhLmNhbmRsZXMgJiYgZGF0YS5jYW5kbGVzLmxlbmd0aCA+IDAgJiYgZGF0YS5jYW5kbGVzWzBdLnZvbHVtZSAmJiB2b2x1bWVTZXJpZXNSZWYuY3VycmVudCkge1xuICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZvbHVtZURhdGEgPSBkYXRhLmNhbmRsZXMubWFwKGNhbmRsZSA9PiAoe1xuICAgICAgICAgICAgICAgICAgdGltZTogY2FuZGxlLnRpbWUsXG4gICAgICAgICAgICAgICAgICB2YWx1ZTogY2FuZGxlLnZvbHVtZSB8fCAwLFxuICAgICAgICAgICAgICAgICAgY29sb3I6IGNhbmRsZS5jID49IGNhbmRsZS5vIFxuICAgICAgICAgICAgICAgICAgICA/ICdyZ2JhKDE2LCAxODUsIDEyOSwgMC41KScgIC8vIGdyZWVuIGZvciB1cFxuICAgICAgICAgICAgICAgICAgICA6ICdyZ2JhKDIzOSwgNjgsIDY4LCAwLjUpJyAgIC8vIHJlZCBmb3IgZG93blxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB2b2x1bWVTZXJpZXNSZWYuY3VycmVudC5zZXREYXRhKHZvbHVtZURhdGEpO1xuICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igc2V0dGluZyB2b2x1bWUgZGF0YTpcIiwgZXJyKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBBcHBseSB0cmFkZSBtYXJrZXJzIGFmdGVyIGNoYXJ0IGRhdGEgaXMgbG9hZGVkXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgaWYgKGV4dGVybmFsVHJhZGVzICYmIEFycmF5LmlzQXJyYXkoZXh0ZXJuYWxUcmFkZXMpICYmIGV4dGVybmFsVHJhZGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkFwcGx5aW5nIGV4dGVybmFsIHRyYWRlIG1hcmtlcnMgYWZ0ZXIgY2hhcnQgaW5pdGlhbGl6YXRpb25cIik7XG4gICAgICAgICAgICAgICAgdXBkYXRlVHJhZGVNYXJrZXJzKGV4dGVybmFsVHJhZGVzKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBUcnkgdG8gZmV0Y2ggYW5kIGFwcGx5IHRyYWRlIGRhdGFcbiAgICAgICAgICAgICAgICBmZXRjaFRyYWRlcygpXG4gICAgICAgICAgICAgICAgICAudGhlbihmZXRjaGVkVHJhZGVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZldGNoZWRUcmFkZXMgJiYgZmV0Y2hlZFRyYWRlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJBcHBseWluZyBmZXRjaGVkIHRyYWRlIG1hcmtlcnMgYWZ0ZXIgY2hhcnQgaW5pdGlhbGl6YXRpb25cIik7XG4gICAgICAgICAgICAgICAgICAgICAgdXBkYXRlVHJhZGVNYXJrZXJzKGZldGNoZWRUcmFkZXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyB0cmFkZXMgZm9yIG1hcmtlcnM6XCIsIGVycik7XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBsb2FkIGluaXRpYWwgZGF0YTpcIiwgZXJyKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgIGlzUmV0cnlpbmdSZWYuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBpbiBjaGFydCBjcmVhdGlvbjpcIiwgZXJyKTtcbiAgICAgICAgc2V0RXJyb3IoYENoYXJ0IGNyZWF0aW9uIGZhaWxlZDogJHtlcnIubWVzc2FnZX1gKTtcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgaXNSZXRyeWluZ1JlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgICB9XG4gICAgfSwgMzAwKTtcbiAgfSwgW3BhaXIsIHRpbWVmcmFtZSwgY2xlYW51cENoYXJ0LCBjbGVhbnVwVGltZXJzQW5kSW50ZXJ2YWxzLCBmZXRjaENhbmRsZURhdGEsIGN1cnJlbnRQcmljZV0pO1xuXG4gIC8vIEluaXRpYWxpemUgY2hhcnQgb25seSBvbmNlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJDaGFydCBpbml0aWFsaXphdGlvbiBlZmZlY3QgcnVubmluZ1wiKTtcbiAgICBcbiAgICAvLyBDYWxsIGhhbmRsZVJldHJ5IHRvIGluaXRpYWxpemUgdGhlIGNoYXJ0XG4gICAgaGFuZGxlUmV0cnkoKTtcbiAgICBcbiAgICAvLyBDbGVhbiB1cCBvbiB1bm1vdW50XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlzTW91bnRlZFJlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgICBjbGVhbnVwQ2hhcnQoKTtcbiAgICAgIGNsZWFudXBUaW1lcnNBbmRJbnRlcnZhbHMoKTtcbiAgICB9O1xuICB9LCBbXSk7IC8vIEVtcHR5IGRlcGVuZGVuY3kgYXJyYXkgLSBydW4gb25seSBvbmNlXG5cbiAgLy8gU2V0IHVwIGRhdGEgcmVmcmVzaCBpbnRlcnZhbFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghY2hhcnRSZWYuY3VycmVudCB8fCAhY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudCkgcmV0dXJuO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKFwiU2V0dGluZyB1cCBkYXRhIHJlZnJlc2ggaW50ZXJ2YWxcIik7XG4gICAgXG4gICAgLy8gVXBkYXRlIGV2ZXJ5IDMwIHNlY29uZHNcbiAgICB1cGRhdGVJbnRlcnZhbFJlZi5jdXJyZW50ID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgaWYgKGlzTW91bnRlZFJlZi5jdXJyZW50ICYmICFpc0ZldGNoaW5nUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgZmV0Y2hDYW5kbGVEYXRhKCkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgaW4gaW50ZXJ2YWwgZmV0Y2g6XCIsIGVycik7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sIDMwMDAwKTtcbiAgICBcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaWYgKHVwZGF0ZUludGVydmFsUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh1cGRhdGVJbnRlcnZhbFJlZi5jdXJyZW50KTtcbiAgICAgICAgdXBkYXRlSW50ZXJ2YWxSZWYuY3VycmVudCA9IG51bGw7XG4gICAgICB9XG4gICAgfTtcbiAgfSwgW2ZldGNoQ2FuZGxlRGF0YV0pO1xuXG4gIC8vIFNldCB1cCB0cmFkZSBkYXRhIGZldGNoXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFjaGFydFJlZi5jdXJyZW50IHx8ICFjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50KSByZXR1cm47XG4gICAgXG4gICAgY29uc29sZS5sb2coXCJGZXRjaGluZyBpbml0aWFsIHRyYWRlIGRhdGFcIik7XG4gICAgZmV0Y2hUcmFkZXMoKS5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIGluaXRpYWwgdHJhZGUgZGF0YTpcIiwgZXJyKTtcbiAgICB9KTtcbiAgICBcbiAgICAvLyBTZXQgdXAgaW50ZXJ2YWwgdG8gcmVmcmVzaCB0cmFkZSBkYXRhXG4gICAgY29uc3QgdHJhZGVVcGRhdGVJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgIGlmIChpc01vdW50ZWRSZWYuY3VycmVudCAmJiAhaXNGZXRjaGluZ1RyYWRlcykge1xuICAgICAgICBmZXRjaFRyYWRlcygpLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGluIHRyYWRlIGludGVydmFsIGZldGNoOlwiLCBlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LCAzMDAwMCk7XG4gICAgXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodHJhZGVVcGRhdGVJbnRlcnZhbCk7XG4gICAgfTtcbiAgfSwgW2ZldGNoVHJhZGVzXSk7XG5cbiAgLy8gVXNlIHVzZUxheW91dEVmZmVjdCB0byBjaGVjayBjb250YWluZXIgZGltZW5zaW9ucyBiZWZvcmUgbW91bnRpbmdcbiAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICBpZiAoY2hhcnRDb250YWluZXJSZWYuY3VycmVudCkge1xuICAgICAgY29uc3QgY29udGFpbmVyID0gY2hhcnRDb250YWluZXJSZWYuY3VycmVudDtcbiAgICAgIFxuICAgICAgLy8gRm9yY2UgY29udGFpbmVyIHRvIGJlIHZpc2libGUgYW5kIGhhdmUgZGltZW5zaW9uc1xuICAgICAgY29udGFpbmVyLnN0eWxlLndpZHRoID0gJzEwMCUnO1xuICAgICAgY29udGFpbmVyLnN0eWxlLmhlaWdodCA9ICcxMDAlJztcbiAgICAgIGNvbnRhaW5lci5zdHlsZS5taW5IZWlnaHQgPSAnNDAwcHgnO1xuICAgICAgY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgY29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcbiAgICAgIFxuICAgICAgLy8gTG9nIGRpbWVuc2lvbnNcbiAgICAgIGNvbnNvbGUubG9nKGBJbml0aWFsIGNvbnRhaW5lciBkaW1lbnNpb25zOiAke2NvbnRhaW5lci5jbGllbnRXaWR0aH14JHtjb250YWluZXIuY2xpZW50SGVpZ2h0fWApO1xuICAgICAgXG4gICAgICAvLyBTZXQgY29udGFpbmVyIHJlYWR5IGlmIGRpbWVuc2lvbnMgYXJlIHZhbGlkXG4gICAgICBpZiAoY29udGFpbmVyLmNsaWVudFdpZHRoID4gMCAmJiBjb250YWluZXIuY2xpZW50SGVpZ2h0ID4gMCkge1xuICAgICAgICBjb250YWluZXJSZWFkeVJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEZvcmNlIGRpbWVuc2lvbnMgb25lIG1vcmUgdGltZVxuICAgICAgICBjb250YWluZXIuc3R5bGUud2lkdGggPSAnMTAwdncnO1xuICAgICAgICBjb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gJzcwdmgnO1xuICAgICAgICBcbiAgICAgICAgLy8gQ2hlY2sgYWdhaW4gYWZ0ZXIgYSBtb21lbnRcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coYERlbGF5ZWQgY29udGFpbmVyIGRpbWVuc2lvbnM6ICR7Y29udGFpbmVyLmNsaWVudFdpZHRofXgke2NvbnRhaW5lci5jbGllbnRIZWlnaHR9YCk7XG4gICAgICAgICAgY29udGFpbmVyUmVhZHlSZWYuY3VycmVudCA9IGNvbnRhaW5lci5jbGllbnRXaWR0aCA+IDAgJiYgY29udGFpbmVyLmNsaWVudEhlaWdodCA+IDA7XG4gICAgICAgIH0sIDEwMCk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbXSk7XG5cbiAgLy8gSW5pdGlhbGl6ZSBjaGFydCB3aGVuIGNvbXBvbmVudCBtb3VudHNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIkNoYXJ0Q29tcG9uZW50IG1vdW50ZWRcIik7XG4gICAgaXNNb3VudGVkUmVmLmN1cnJlbnQgPSB0cnVlO1xuICAgIFxuICAgIC8vIFdhaXQgZm9yIG5leHQgdGljayB0byBlbnN1cmUgY29udGFpbmVyIGlzIGluIERPTVxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaWYgKCFjb250YWluZXJSZWFkeVJlZi5jdXJyZW50ICYmIGNoYXJ0Q29udGFpbmVyUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgLy8gQ2hlY2sgZGltZW5zaW9ucyBhZ2FpblxuICAgICAgICBjb25zdCBjb250YWluZXIgPSBjaGFydENvbnRhaW5lclJlZi5jdXJyZW50O1xuICAgICAgICBjb25zb2xlLmxvZyhgQ29udGFpbmVyIGRpbWVuc2lvbnMgYmVmb3JlIGluaXQ6ICR7Y29udGFpbmVyLmNsaWVudFdpZHRofXgke2NvbnRhaW5lci5jbGllbnRIZWlnaHR9YCk7XG4gICAgICAgIFxuICAgICAgICAvLyBGb3JjZSBtaW5pbXVtIHNpemUgaWYgbmVlZGVkXG4gICAgICAgIGlmIChjb250YWluZXIuY2xpZW50V2lkdGggPCAxMCB8fCBjb250YWluZXIuY2xpZW50SGVpZ2h0IDwgMTApIHtcbiAgICAgICAgICBjb250YWluZXIuc3R5bGUud2lkdGggPSAnMTAwJSc7XG4gICAgICAgICAgY29udGFpbmVyLnN0eWxlLmhlaWdodCA9ICc0MDBweCc7XG4gICAgICAgICAgY29udGFpbmVyLnN0eWxlLm1pbkhlaWdodCA9ICc0MDBweCc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3Qgc3VjY2VzcyA9IGhhbmRsZVJldHJ5KCk7XG4gICAgICBcbiAgICAgIGlmIChzdWNjZXNzKSB7XG4gICAgICAgIGZldGNoQ2FuZGxlRGF0YSgpXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJJbml0aWFsIGRhdGEgbG9hZGVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBsb2FkIGluaXRpYWwgZGF0YTpcIiwgZXJyKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIFNldCB1cCBkYXRhIHJlZnJlc2ggaW50ZXJ2YWxcbiAgICAgICAgdXBkYXRlSW50ZXJ2YWxSZWYuY3VycmVudCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICBpZiAoaXNNb3VudGVkUmVmLmN1cnJlbnQgJiYgIWlzRmV0Y2hpbmdSZWYuY3VycmVudCkge1xuICAgICAgICAgICAgZmV0Y2hDYW5kbGVEYXRhKCkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGluIGludGVydmFsIGZldGNoOlwiLCBlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAzMDAwMCk7XG4gICAgICB9XG4gICAgfSwgMzAwKTtcbiAgICBcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coXCJDaGFydENvbXBvbmVudCB1bm1vdW50aW5nXCIpO1xuICAgICAgaXNNb3VudGVkUmVmLmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgIGNsZWFudXBDaGFydCgpO1xuICAgICAgY2xlYW51cFRpbWVyc0FuZEludGVydmFscygpO1xuICAgIH07XG4gIH0sIFtoYW5kbGVSZXRyeSwgZmV0Y2hDYW5kbGVEYXRhLCBjbGVhbnVwQ2hhcnQsIGNsZWFudXBUaW1lcnNBbmRJbnRlcnZhbHNdKTtcblxuICAvLyBFeHBvc2UgbWV0aG9kcyB0byBwYXJlbnQgdmlhIHJlZlxuICB1c2VJbXBlcmF0aXZlSGFuZGxlKHJlZiwgKCkgPT4gKHtcbiAgICByZWxvYWRDaGFydDogKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coXCJSZWxvYWQgY2hhcnQgbWV0aG9kIGNhbGxlZCBmcm9tIHBhcmVudFwiKTtcbiAgICAgIGlmIChjaGFydFJlZi5jdXJyZW50KSB7XG4gICAgICAgIGZldGNoQ2FuZGxlRGF0YSgpLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHJlbG9hZGluZyBjaGFydCBkYXRhOlwiLCBlcnIpO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGZldGNoVHJhZGVzKCkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgcmVsb2FkaW5nIHRyYWRlIGRhdGE6XCIsIGVycik7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiQ2hhcnQgbm90IGluaXRpYWxpemVkLCBjYW5ub3QgcmVsb2FkXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfSkpO1xuICBcbiAgLy8gU3luYyB3aXRoIGV4dGVybmFsIHRyYWRlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChleHRlcm5hbFRyYWRlcyAmJiBBcnJheS5pc0FycmF5KGV4dGVybmFsVHJhZGVzKSkge1xuICAgICAgY29uc29sZS5sb2coYFJlY2VpdmVkICR7ZXh0ZXJuYWxUcmFkZXMubGVuZ3RofSBleHRlcm5hbCB0cmFkZXNgKTtcbiAgICAgIFxuICAgICAgLy8gRmlsdGVyIHRyYWRlcyBmb3IgdGhlIGN1cnJlbnQgcGFpciBhbmQgdGltZWZyYW1lXG4gICAgICBjb25zdCBmaWx0ZXJlZFRyYWRlcyA9IGV4dGVybmFsVHJhZGVzLmZpbHRlcih0cmFkZSA9PiBcbiAgICAgICAgdHJhZGUucGFpciA9PT0gcGFpciAmJiBcbiAgICAgICAgKHRyYWRlLnRpbWVmcmFtZSA9PT0gdGltZWZyYW1lIHx8ICF0aW1lZnJhbWUpXG4gICAgICApO1xuICAgICAgXG4gICAgICBzZXRUcmFkZXMoZmlsdGVyZWRUcmFkZXMpO1xuICAgICAgXG4gICAgICAvLyBVcGRhdGUgbWFya2VycyBpZiBjaGFydCBpcyByZWFkeVxuICAgICAgaWYgKGNoYXJ0UmVmLmN1cnJlbnQgJiYgY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudCkge1xuICAgICAgICB1cGRhdGVUcmFkZU1hcmtlcnMoZmlsdGVyZWRUcmFkZXMpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW2V4dGVybmFsVHJhZGVzLCBwYWlyLCB0aW1lZnJhbWUsIHVwZGF0ZVRyYWRlTWFya2Vyc10pO1xuXG4gIC8vIENyZWF0ZSBhIHNlcGFyYXRlIGVmZmVjdCBzcGVjaWZpY2FsbHkgZm9yIHVwZGF0aW5nIG1hcmtlcnMgd2hlbiBleHRlcm5hbFRyYWRlcyBjaGFuZ2VcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWNoYXJ0UmVmLmN1cnJlbnQpIHJldHVybjtcbiAgICBcbiAgICAvLyBMb2NhbCBmdW5jdGlvbiB0byB1cGRhdGUgbWFya2VycyB3aXRob3V0IGRlcGVuZGVuY3kgb24gdXBkYXRlVHJhZGVNYXJrZXJzXG4gICAgY29uc3QgYXBwbHlNYXJrZXJzID0gKCkgPT4ge1xuICAgICAgaWYgKGV4dGVybmFsVHJhZGVzICYmIEFycmF5LmlzQXJyYXkoZXh0ZXJuYWxUcmFkZXMpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBFeHRlcm5hbCB0cmFkZXMgdXBkYXRlZCwgdXBkYXRpbmcgbWFya2VycyAoJHtleHRlcm5hbFRyYWRlcy5sZW5ndGh9IHRyYWRlcylgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIEZpbHRlciB0cmFkZXMgZm9yIHRoaXMgcGFpciBhbmQgdGltZWZyYW1lXG4gICAgICAgIGNvbnN0IHJlbGV2YW50VHJhZGVzID0gZXh0ZXJuYWxUcmFkZXMuZmlsdGVyKHRyYWRlID0+IFxuICAgICAgICAgIHRyYWRlLnBhaXIgPT09IHBhaXIgJiYgKHRyYWRlLnRpbWVmcmFtZSA9PT0gdGltZWZyYW1lIHx8ICF0aW1lZnJhbWUpXG4gICAgICAgICk7XG4gICAgICAgIFxuICAgICAgICBpZiAocmVsZXZhbnRUcmFkZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ05vIHJlbGV2YW50IHRyYWRlcyB0byBkaXNwbGF5Jyk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyhgRm91bmQgJHtyZWxldmFudFRyYWRlcy5sZW5ndGh9IHJlbGV2YW50IHRyYWRlcyBmb3IgbWFya2Vyc2ApO1xuICAgICAgICBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBDcmVhdGUgbWFya2VycyBmb3IgZW50cnkvZXhpdCBwb2ludHNcbiAgICAgICAgICBjb25zdCBtYXJrZXJzID0gcmVsZXZhbnRUcmFkZXMuZmxhdE1hcCh0cmFkZSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0aW1lID0gbmV3IERhdGUodHJhZGUudGltZXN0YW1wKS5nZXRUaW1lKCkgLyAxMDAwO1xuICAgICAgICAgICAgY29uc3QgbWFya2VycyA9IFtdO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBFbnRyeSBtYXJrZXJcbiAgICAgICAgICAgIG1hcmtlcnMucHVzaCh7XG4gICAgICAgICAgICAgIHRpbWUsXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiB0cmFkZS5kaXJlY3Rpb24gPT09ICdidXknID8gJ2JlbG93QmFyJyA6ICdhYm92ZUJhcicsXG4gICAgICAgICAgICAgIGNvbG9yOiB0cmFkZS5kaXJlY3Rpb24gPT09ICdidXknID8gJyMxMGI5ODEnIDogJyNlZjQ0NDQnLFxuICAgICAgICAgICAgICBzaGFwZTogdHJhZGUuZGlyZWN0aW9uID09PSAnYnV5JyA/ICdhcnJvd1VwJyA6ICdhcnJvd0Rvd24nLFxuICAgICAgICAgICAgICB0ZXh0OiBgRW50cnkgJHtmb3JtYXRQcmljZSh0cmFkZS5lbnRyeSwgcGFpcil9YCxcbiAgICAgICAgICAgICAgc2l6ZTogMlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEV4aXQgbWFya2VyIChmb3IgY2xvc2VkIHRyYWRlcylcbiAgICAgICAgICAgIGlmICh0cmFkZS5zdGF0dXMgIT09ICdvcGVuJykge1xuICAgICAgICAgICAgICBtYXJrZXJzLnB1c2goe1xuICAgICAgICAgICAgICAgIHRpbWU6IHRpbWUgKyAoNjAgKiA2MCksIC8vIEFkZCBzb21lIHRpbWUgb2Zmc2V0IGZvciB2aXN1YWxpemF0aW9uXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHRyYWRlLmRpcmVjdGlvbiA9PT0gJ2J1eScgPyAnYWJvdmVCYXInIDogJ2JlbG93QmFyJyxcbiAgICAgICAgICAgICAgICBjb2xvcjogdHJhZGUuc3RhdHVzID09PSAnd2luJyA/ICcjMTBiOTgxJyA6ICcjZWY0NDQ0JyxcbiAgICAgICAgICAgICAgICBzaGFwZTogJ2NpcmNsZScsXG4gICAgICAgICAgICAgICAgdGV4dDogYEV4aXQgKCR7dHJhZGUuc3RhdHVzLnRvVXBwZXJDYXNlKCl9KWAsXG4gICAgICAgICAgICAgICAgc2l6ZTogMlxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIG1hcmtlcnM7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc29sZS5sb2coYFNldHRpbmcgJHttYXJrZXJzLmxlbmd0aH0gbWFya2VycyBvbiBjaGFydGApO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIFNldCBtYXJrZXJzIHRvIHRoZSBhcHByb3ByaWF0ZSBzZXJpZXNcbiAgICAgICAgICBpZiAobWFya2VyU2VyaWVzUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIG1hcmtlclNlcmllc1JlZi5jdXJyZW50LnNldE1hcmtlcnMobWFya2Vycyk7XG4gICAgICAgICAgfSBlbHNlIGlmIChjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICBjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50LnNldE1hcmtlcnMobWFya2Vycyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIEFkZCBwcmljZSBsaW5lcyBmb3Igb3BlbiB0cmFkZXMgdG8gdmlzdWFsaXplIGVudHJ5L2V4aXQgbGV2ZWxzXG4gICAgICAgICAgaWYgKGNhbmRsZXN0aWNrU2VyaWVzUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIC8vIEZpcnN0LCB0cnkgdG8gcmVtb3ZlIGFueSBleGlzdGluZyB0cmFkZSBwcmljZSBsaW5lc1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgLy8gVXNlIGEgdHJ5LWNhdGNoIGJsb2NrIHNpbmNlIHRoZSBwcmljZUxpbmVzIG1ldGhvZCBtaWdodCBub3QgZXhpc3RcbiAgICAgICAgICAgICAgLy8gSW5zdGVhZCBvZiB0cnlpbmcgdG8gZ2V0IGFsbCBwcmljZSBsaW5lcywganVzdCBhdHRlbXB0IHRvIHJlbW92ZSB0aGUgb25lcyB3ZSBrbm93IGFib3V0XG4gICAgICAgICAgICAgIC8vIGJ5IHRoZWlyIElEcyAod2hpY2ggd2UnbGwgdHJhY2sgaW4gc3RhdGUpXG4gICAgICAgICAgICAgIGNvbnN0IG9wZW5UcmFkZXMgPSByZWxldmFudFRyYWRlcy5maWx0ZXIodHJhZGUgPT4gdHJhZGUuc3RhdHVzID09PSAnb3BlbicpO1xuICAgICAgICAgICAgICBvcGVuVHJhZGVzLmZvckVhY2godHJhZGUgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAvLyBUcnkgdG8gcmVtb3ZlIGV4aXN0aW5nIGxpbmVzIGZvciB0aGlzIHRyYWRlIElEIGlmIHRoZXkgZXhpc3RcbiAgICAgICAgICAgICAgICAgIGNhbmRsZXN0aWNrU2VyaWVzUmVmLmN1cnJlbnQucmVtb3ZlUHJpY2VMaW5lKHRyYWRlLmlkICsgJ19lbnRyeScpO1xuICAgICAgICAgICAgICAgICAgY2FuZGxlc3RpY2tTZXJpZXNSZWYuY3VycmVudC5yZW1vdmVQcmljZUxpbmUodHJhZGUuaWQgKyAnX3NsJyk7XG4gICAgICAgICAgICAgICAgICBjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50LnJlbW92ZVByaWNlTGluZSh0cmFkZS5pZCArICdfdHAnKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgIC8vIElnbm9yZSBlcnJvcnMgZnJvbSByZW1vdmluZyBub24tZXhpc3RlbnQgbGluZXNcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciByZW1vdmluZyBleGlzdGluZyBwcmljZSBsaW5lczpcIiwgZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQWRkIG5ldyBwcmljZSBsaW5lcyBmb3Igb3BlbiB0cmFkZXNcbiAgICAgICAgICAgIGNvbnN0IG9wZW5UcmFkZXMgPSByZWxldmFudFRyYWRlcy5maWx0ZXIodHJhZGUgPT4gdHJhZGUuc3RhdHVzID09PSAnb3BlbicpO1xuICAgICAgICAgICAgb3BlblRyYWRlcy5mb3JFYWNoKHRyYWRlID0+IHtcbiAgICAgICAgICAgICAgLy8gRW50cnkgcHJpY2UgbGluZVxuICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIC8vIEVudHJ5IHByaWNlIGxpbmUgLSBSZW1vdmVkIHRvIGVsaW1pbmF0ZSBncmVlbiBob3Jpem9udGFsIGxpbmUgd2hlbiBkaXJlY3Rpb24gaXMgJ2J1eSdcbiAgICAgICAgICAgICAgICAvLyBjYW5kbGVzdGlja1Nlcmllc1JlZi5jdXJyZW50LmNyZWF0ZVByaWNlTGluZSh7XG4gICAgICAgICAgICAgICAgLy8gICBwcmljZTogdHJhZGUuZW50cnksXG4gICAgICAgICAgICAgICAgLy8gICBjb2xvcjogdHJhZGUuZGlyZWN0aW9uID09PSAnYnV5JyA/ICcjMTBiOTgxJyA6ICcjZWY0NDQ0JyxcbiAgICAgICAgICAgICAgICAvLyAgIGxpbmVXaWR0aDogMixcbiAgICAgICAgICAgICAgICAvLyAgIGxpbmVTdHlsZTogMSwgLy8gU29saWRcbiAgICAgICAgICAgICAgICAvLyAgIGF4aXNMYWJlbFZpc2libGU6IGZhbHNlLCAvLyBIaWRlIGF4aXMgbGFiZWwgdG8gcHJldmVudCBjbHV0dGVyXG4gICAgICAgICAgICAgICAgLy8gICB0aXRsZTogYEVudHJ5ICR7Zm9ybWF0UHJpY2UodHJhZGUuZW50cnksIHBhaXIpfWAsXG4gICAgICAgICAgICAgICAgLy8gICBpZDogdHJhZGUuaWQgKyAnX2VudHJ5JyAvLyBVc2UgYSBzaW1wbGVyIElEIGZvcm1hdFxuICAgICAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIE5vIGxvbmdlciBzaG93aW5nIHN0b3AgbG9zcyBsaW5lXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gVGFrZSBQcm9maXQgcHJpY2UgbGluZSAtIFJlbW92ZWQgdG8gZWxpbWluYXRlIGdyZWVuIGhvcml6b250YWwgbGluZVxuICAgICAgICAgICAgICAgIC8vIGNhbmRsZXN0aWNrU2VyaWVzUmVmLmN1cnJlbnQuY3JlYXRlUHJpY2VMaW5lKHtcbiAgICAgICAgICAgICAgICAvLyAgIHByaWNlOiB0cmFkZS50YWtlUHJvZml0LFxuICAgICAgICAgICAgICAgIC8vICAgY29sb3I6ICcjMTBiOTgxJywgLy8gR3JlZW5cbiAgICAgICAgICAgICAgICAvLyAgIGxpbmVXaWR0aDogMixcbiAgICAgICAgICAgICAgICAvLyAgIGxpbmVTdHlsZTogMywgLy8gRG90dGVkXG4gICAgICAgICAgICAgICAgLy8gICBheGlzTGFiZWxWaXNpYmxlOiBmYWxzZSwgLy8gSGlkZSBheGlzIGxhYmVsIHRvIHByZXZlbnQgY2x1dHRlclxuICAgICAgICAgICAgICAgIC8vICAgdGl0bGU6IGBUUCAke2Zvcm1hdFByaWNlKHRyYWRlLnRha2VQcm9maXQsIHBhaXIpfWAsXG4gICAgICAgICAgICAgICAgLy8gICBpZDogdHJhZGUuaWQgKyAnX3RwJ1xuICAgICAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgYWRkaW5nIHRyYWRlIHByaWNlIGxpbmVzOlwiLCBlcnIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBzZXR0aW5nIG1hcmtlcnM6XCIsIGVycik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIC8vIEFwcGx5IHdpdGggYSBzaG9ydCB0aW1lb3V0IHRvIGVuc3VyZSBjaGFydCBpcyByZWFkeVxuICAgIGNvbnN0IHRpbWVySWQgPSBzZXRUaW1lb3V0KGFwcGx5TWFya2VycywgMTAwKTtcbiAgICBcbiAgICByZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KHRpbWVySWQpO1xuICB9LCBbZXh0ZXJuYWxUcmFkZXMsIHBhaXIsIHRpbWVmcmFtZV0pO1xuXG4gIC8vIFJldHVybiBjb21wb25lbnQgSlNYXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIHctZnVsbCBoLWZ1bGwgcmVsYXRpdmVcIiBzdHlsZT17eyBtaW5IZWlnaHQ6ICc0MDBweCcgfX0+XG4gICAgICA8ZGl2IFxuICAgICAgICByZWY9e2NoYXJ0Q29udGFpbmVyUmVmfSBcbiAgICAgICAgY2xhc3NOYW1lPVwiZmxleC0xIHctZnVsbCBoLWZ1bGxcIlxuICAgICAgICBzdHlsZT17eyBcbiAgICAgICAgICBtaW5IZWlnaHQ6ICc0MDBweCcsXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgICBkaXNwbGF5OiAnYmxvY2snXG4gICAgICAgIH19XG4gICAgICAvPlxuICAgICAgXG4gICAgICB7aXNMb2FkaW5nICYmIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhYnNvbHV0ZSBpbnNldC0wIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGJnLW9wYWNpdHktNzUgYmctZ3JheS05MDAgei0xMFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC13aGl0ZVwiPkxvYWRpbmcgY2hhcnQgZGF0YS4uLjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgICBcbiAgICAgIHtlcnJvciAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWJzb2x1dGUgaW5zZXQtMCBmbGV4IGZsZXgtY29sIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBiZy1vcGFjaXR5LTc1IGJnLWdyYXktOTAwIHotMTBcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtcmVkLTUwMCBtYi00XCI+e2Vycm9yfTwvZGl2PlxuICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgYmctYmx1ZS02MDAgaG92ZXI6YmctYmx1ZS03MDAgdGV4dC13aGl0ZSByb3VuZGVkXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVJldHJ5fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFJldHJ5XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICAgIFxuICAgICAge2N1cnJlbnRQcmljZSAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWJzb2x1dGUgdG9wLTIgcmlnaHQtMiBmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTIgei0yMFwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YHRleHQtc20gZm9udC1tb25vICR7cHJpY2VDaGFuZ2VQb3NpdGl2ZSA/ICd0ZXh0LWdyZWVuLTUwMCcgOiAndGV4dC1yZWQtNTAwJ31gfT5cbiAgICAgICAgICAgIHtmb3JtYXRQcmljZShjdXJyZW50UHJpY2UsIHBhaXIpfVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICB7bGFzdFVwZGF0ZVRpbWUgJiYgKFxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LWdyYXktNDAwXCI+XG4gICAgICAgICAgICAgIHtsYXN0VXBkYXRlVGltZS50b0xvY2FsZVRpbWVTdHJpbmcoKX1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgICBcbiAgICAgIHsvKiBUcmFkZSBwcm9ncmVzcyBpbmRpY2F0b3IgLSByZW1vdmVkIGFzIGl0J3MgcmVkdW5kYW50IHdpdGggY2hhcnQgcHJpY2UgbGluZXMgKi99XG4gICAgICBcbiAgICAgIHsvKiBUcmFkZXMgcGFuZWwgKi99XG4gICAgICA8ZGl2IFxuICAgICAgICByZWY9e3RyYWRlc0NvbnRhaW5lclJlZn1cbiAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIGJnLWdyYXktOTAwIGJvcmRlci10IGJvcmRlci1ncmF5LTcwMCBvdmVyZmxvdy1hdXRvXCJcbiAgICAgICAgc3R5bGU9e3sgaGVpZ2h0OiAnMTUwcHgnLCBtaW5IZWlnaHQ6ICcxNTBweCcgfX1cbiAgICAgID5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTIgYm9yZGVyLWIgYm9yZGVyLWdyYXktNzAwIGJnLWdyYXktODAwIGZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtc2VtaWJvbGQgdGV4dC13aGl0ZVwiPlRyYWRlczwvaDM+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXhzIHRleHQtZ3JheS00MDBcIj5cbiAgICAgICAgICAgIHt0cmFkZXMubGVuZ3RofSB7dHJhZGVzLmxlbmd0aCA9PT0gMSA/ICd0cmFkZScgOiAndHJhZGVzJ30gZm9yIHtwYWlyfSAvIHt0aW1lZnJhbWV9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICBcbiAgICAgICAge3RyYWRlcy5sZW5ndGggPT09IDAgPyAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLWZ1bGwgdGV4dC1ncmF5LTUwMCB0ZXh0LXNtXCI+XG4gICAgICAgICAgICBObyB0cmFkZXMgZm91bmQgZm9yIHRoaXMgcGFpciBhbmQgdGltZWZyYW1lXG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvdmVyZmxvdy14LWF1dG9cIj5cbiAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJtaW4tdy1mdWxsIGRpdmlkZS15IGRpdmlkZS1ncmF5LTcwMFwiPlxuICAgICAgICAgICAgICA8dGhlYWQgY2xhc3NOYW1lPVwiYmctZ3JheS04MDBcIj5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIiBjbGFzc05hbWU9XCJweC0zIHB5LTIgdGV4dC1sZWZ0IHRleHQteHMgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTQwMCB1cHBlcmNhc2UgdHJhY2tpbmctd2lkZXJcIj5EaXJlY3Rpb248L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCIgY2xhc3NOYW1lPVwicHgtMyBweS0yIHRleHQtbGVmdCB0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS00MDAgdXBwZXJjYXNlIHRyYWNraW5nLXdpZGVyXCI+RW50cnk8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCIgY2xhc3NOYW1lPVwicHgtMyBweS0yIHRleHQtbGVmdCB0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS00MDAgdXBwZXJjYXNlIHRyYWNraW5nLXdpZGVyXCI+U3RvcCBMb3NzPC90aD5cbiAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiIGNsYXNzTmFtZT1cInB4LTMgcHktMiB0ZXh0LWxlZnQgdGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LWdyYXktNDAwIHVwcGVyY2FzZSB0cmFja2luZy13aWRlclwiPlRha2UgUHJvZml0PC90aD5cbiAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT1cImNvbFwiIGNsYXNzTmFtZT1cInB4LTMgcHktMiB0ZXh0LWxlZnQgdGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LWdyYXktNDAwIHVwcGVyY2FzZSB0cmFja2luZy13aWRlclwiPlI6UjwvdGg+XG4gICAgICAgICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIiBjbGFzc05hbWU9XCJweC0zIHB5LTIgdGV4dC1sZWZ0IHRleHQteHMgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTQwMCB1cHBlcmNhc2UgdHJhY2tpbmctd2lkZXJcIj5TdGF0dXM8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPVwiY29sXCIgY2xhc3NOYW1lPVwicHgtMyBweS0yIHRleHQtbGVmdCB0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS00MDAgdXBwZXJjYXNlIHRyYWNraW5nLXdpZGVyXCI+VGltZTwvdGg+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgICAgPHRib2R5IGNsYXNzTmFtZT1cImJnLWdyYXktOTAwIGRpdmlkZS15IGRpdmlkZS1ncmF5LTgwMFwiPlxuICAgICAgICAgICAgICAgIHt0cmFkZXMubWFwKHRyYWRlID0+IChcbiAgICAgICAgICAgICAgICAgIDx0ciBrZXk9e3RyYWRlLmlkfSBjbGFzc05hbWU9XCJob3ZlcjpiZy1ncmF5LTgwMFwiPlxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicHgtMyBweS0yIHdoaXRlc3BhY2Utbm93cmFwIHRleHQtc21cIj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dHJhZGUuZGlyZWN0aW9uID09PSAnYnV5JyA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEFycm93VXAgc2l6ZT17MTR9IGNsYXNzTmFtZT1cInRleHQtZ3JlZW4tNTAwIG1yLTFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPEFycm93RG93biBzaXplPXsxNH0gY2xhc3NOYW1lPVwidGV4dC1yZWQtNTAwIG1yLTFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17dHJhZGUuZGlyZWN0aW9uID09PSAnYnV5JyA/ICd0ZXh0LWdyZWVuLTUwMCcgOiAndGV4dC1yZWQtNTAwJ30+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHt0cmFkZS5kaXJlY3Rpb24udG9VcHBlckNhc2UoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInB4LTMgcHktMiB3aGl0ZXNwYWNlLW5vd3JhcCB0ZXh0LXNtIGZvbnQtbW9ub1wiPlxuICAgICAgICAgICAgICAgICAgICAgIHtmb3JtYXRQcmljZSh0cmFkZS5lbnRyeSwgcGFpcil9XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJweC0zIHB5LTIgd2hpdGVzcGFjZS1ub3dyYXAgdGV4dC1zbSBmb250LW1vbm8gdGV4dC1yZWQtNTAwXCI+XG4gICAgICAgICAgICAgICAgICAgICAge2Zvcm1hdFByaWNlKHRyYWRlLnN0b3BMb3NzLCBwYWlyKX1cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInB4LTMgcHktMiB3aGl0ZXNwYWNlLW5vd3JhcCB0ZXh0LXNtIGZvbnQtbW9ubyB0ZXh0LWdyZWVuLTUwMFwiPlxuICAgICAgICAgICAgICAgICAgICAgIHtmb3JtYXRQcmljZSh0cmFkZS50YWtlUHJvZml0LCBwYWlyKX1cbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInB4LTMgcHktMiB3aGl0ZXNwYWNlLW5vd3JhcCB0ZXh0LXNtXCI+XG4gICAgICAgICAgICAgICAgICAgICAge3RyYWRlLnJpc2tSZXdhcmR9XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJweC0zIHB5LTIgd2hpdGVzcGFjZS1ub3dyYXAgdGV4dC1zbVwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YGlubGluZS1mbGV4IHB4LTIgdGV4dC14cyBsZWFkaW5nLTUgZm9udC1zZW1pYm9sZCByb3VuZGVkLWZ1bGxcbiAgICAgICAgICAgICAgICAgICAgICAgICR7dHJhZGUuc3RhdHVzID09PSAnd2luJyA/ICdiZy1ncmVlbi0xMDAgdGV4dC1ncmVlbi04MDAnIDogXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWRlLnN0YXR1cyA9PT0gJ2xvc3MnID8gJ2JnLXJlZC0xMDAgdGV4dC1yZWQtODAwJyA6IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnYmctYmx1ZS0xMDAgdGV4dC1ibHVlLTgwMCd9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dHJhZGUuc3RhdHVzLnRvVXBwZXJDYXNlKCl9XG4gICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicHgtMyBweS0yIHdoaXRlc3BhY2Utbm93cmFwIHRleHQtc20gdGV4dC1ncmF5LTQwMFwiPlxuICAgICAgICAgICAgICAgICAgICAgIHtuZXcgRGF0ZSh0cmFkZS50aW1lc3RhbXApLnRvTG9jYWxlU3RyaW5nKCl9XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufSk7ICJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsInVzZUNhbGxiYWNrIiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsImZvcndhcmRSZWYiLCJ1c2VMYXlvdXRFZmZlY3QiLCJjcmVhdGVDaGFydCIsIkNyb3NzaGFpck1vZGUiLCJMaW5lU3R5bGUiLCJBY3Rpdml0eSIsIkFycm93RG93biIsIkFycm93VXAiLCJYIiwiQ2xvY2siLCJmb3JtYXRQcmljZSIsInByaWNlIiwicGFpciIsInVuZGVmaW5lZCIsInByZWNpc2lvbiIsImluY2x1ZGVzIiwidG9GaXhlZCIsInJlZiIsInRpbWVmcmFtZSIsImV4dGVybmFsVHJhZGVzIiwiY2hhcnRDb250YWluZXJSZWYiLCJjaGFydFJlZiIsImNhbmRsZXN0aWNrU2VyaWVzUmVmIiwidm9sdW1lU2VyaWVzUmVmIiwicHJpY2VMYWJlbFJlZiIsIm1hcmtlclNlcmllc1JlZiIsInJlc2l6ZU9ic2VydmVyUmVmIiwidGltZXJSZWYiLCJ1cGRhdGVJbnRlcnZhbFJlZiIsImlzTW91bnRlZFJlZiIsImlzRmV0Y2hpbmdSZWYiLCJjaGFydEluaXRpYWxpemVkUmVmIiwiaXNSZXRyeWluZ1JlZiIsImNvbnRhaW5lclJlYWR5UmVmIiwidHJhZGVzQ29udGFpbmVyUmVmIiwiaXNMb2FkaW5nIiwic2V0SXNMb2FkaW5nIiwiZXJyb3IiLCJzZXRFcnJvciIsImN1cnJlbnRQcmljZSIsInNldEN1cnJlbnRQcmljZSIsInByaWNlQ2hhbmdlUG9zaXRpdmUiLCJzZXRQcmljZUNoYW5nZVBvc2l0aXZlIiwibGFzdFVwZGF0ZVRpbWUiLCJzZXRMYXN0VXBkYXRlVGltZSIsInRyYWRlcyIsInNldFRyYWRlcyIsImlzRmV0Y2hpbmdUcmFkZXMiLCJzZXRJc0ZldGNoaW5nVHJhZGVzIiwiY2xlYW51cFRpbWVyc0FuZEludGVydmFscyIsImN1cnJlbnQiLCJjbGVhclRpbWVvdXQiLCJjbGVhckludGVydmFsIiwiZGlzY29ubmVjdCIsImNsZWFudXBDaGFydCIsInJlbW92ZSIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJ1cGRhdGVDdXJyZW50UHJpY2VJbmRpY2F0b3IiLCJhcHBseU9wdGlvbnMiLCJ0aXRsZSIsImF4aXNMYWJlbFZpc2libGUiLCJmZXRjaENhbmRsZURhdGEiLCJQcm9taXNlIiwicmVzb2x2ZSIsImZldGNoIiwiRGF0ZSIsIm5vdyIsImhlYWRlcnMiLCJ0aGVuIiwicmVzcG9uc2UiLCJvayIsIkVycm9yIiwic3RhdHVzIiwianNvbiIsImRhdGEiLCJjYW5kbGVzIiwibGVuZ3RoIiwiQXJyYXkiLCJpc0FycmF5IiwiY2FuZGxlRGF0YSIsImZpbHRlciIsImNhbmRsZSIsInRpbWUiLCJtYXAiLCJvcGVuIiwiTnVtYmVyIiwibyIsImhpZ2giLCJoIiwibG93IiwibCIsImNsb3NlIiwiYyIsInNldERhdGEiLCJudW1lcmljUHJpY2UiLCJpc05hTiIsInRpbWVTY2FsZSIsImZpdENvbnRlbnQiLCJ2aXNpYmxlUmFuZ2UiLCJnZXRWaXNpYmxlUmFuZ2UiLCJwcmljZVNjYWxlIiwiYXV0b1NjYWxlIiwibW9kZSIsInRpY2tzVmlzaWJsZSIsInNjYWxlTWFyZ2lucyIsInRvcCIsImJvdHRvbSIsImNhdGNoIiwibWVzc2FnZSIsImZpbmFsbHkiLCJmZXRjaFRyYWRlcyIsInVwZGF0ZVRyYWRlTWFya2VycyIsInRyYWRlRGF0YSIsInNldE1hcmtlcnMiLCJyZWxldmFudFRyYWRlcyIsInRyYWRlIiwibWFya2VycyIsImZsYXRNYXAiLCJ0aW1lc3RhbXAiLCJnZXRUaW1lIiwicHVzaCIsInBvc2l0aW9uIiwiZGlyZWN0aW9uIiwiY29sb3IiLCJzaGFwZSIsInRleHQiLCJlbnRyeSIsInNpemUiLCJ0b1VwcGVyQ2FzZSIsIm9wZW5UcmFkZXMiLCJmb3JFYWNoIiwicmVtb3ZlUHJpY2VMaW5lIiwiaWQiLCJoYW5kbGVSZXRyeSIsInNldFRpbWVvdXQiLCJjb250YWluZXIiLCJzdHlsZSIsIndpZHRoIiwiaGVpZ2h0IiwiZGlzcGxheSIsIk1hdGgiLCJtYXgiLCJjbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsImNoYXJ0IiwibGF5b3V0IiwiYmFja2dyb3VuZCIsInRleHRDb2xvciIsImZvbnRTaXplIiwiZ3JpZCIsInZlcnRMaW5lcyIsImhvcnpMaW5lcyIsInZpc2libGUiLCJyaWdodFByaWNlU2NhbGUiLCJib3JkZXJDb2xvciIsImJvcmRlclZpc2libGUiLCJtaW5pbXVtSGVpZ2h0IiwiYWxpZ25MYWJlbHMiLCJlbnRpcmVUZXh0T25seSIsInRpbWVWaXNpYmxlIiwic2Vjb25kc1Zpc2libGUiLCJ0aWNrTWFya0Zvcm1hdHRlciIsInRpY2tNYXJrVHlwZSIsImxvY2FsZSIsImRhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJtb250aCIsImRheSIsImhvdXJzIiwiZ2V0SG91cnMiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwibWludXRlcyIsImdldE1pbnV0ZXMiLCJjcm9zc2hhaXIiLCJOb3JtYWwiLCJ2ZXJ0TGluZSIsImxhYmVsVmlzaWJsZSIsImhvcnpMaW5lIiwid2F0ZXJtYXJrIiwiZGV0ZXJtaW5lUHJpY2VQcmVjaXNpb24iLCJzZXJpZXMiLCJhZGRDYW5kbGVzdGlja1NlcmllcyIsInVwQ29sb3IiLCJkb3duQ29sb3IiLCJ3aWNrVXBDb2xvciIsIndpY2tEb3duQ29sb3IiLCJwcmljZUZvcm1hdCIsInR5cGUiLCJtaW5Nb3ZlIiwicG93IiwibGFzdFZhbHVlVmlzaWJsZSIsInByaWNlTGluZVZpc2libGUiLCJwcmljZUxpbmVXaWR0aCIsInByaWNlTGluZUNvbG9yIiwicHJpY2VMaW5lU3R5bGUiLCJEb3R0ZWQiLCJpbnZlcnRTY2FsZSIsInZvbHVtZVNlcmllcyIsImFkZEhpc3RvZ3JhbVNlcmllcyIsInByaWNlU2NhbGVJZCIsIm1hcmtlclNlcmllcyIsImFkZExpbmVTZXJpZXMiLCJsaW5lVmlzaWJsZSIsImJhc2VMaW5lVmlzaWJsZSIsImNyb3NzaGFpck1hcmtlclZpc2libGUiLCJwcmljZUxpbmUiLCJjcmVhdGVQcmljZUxpbmUiLCJsaW5lV2lkdGgiLCJoYW5kbGVSZXNpemUiLCJuZXdXaWR0aCIsIm5ld0hlaWdodCIsInJlc2l6ZSIsIlJlc2l6ZU9ic2VydmVyIiwib2JzZXJ2ZSIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJ2b2x1bWUiLCJ2b2x1bWVEYXRhIiwidmFsdWUiLCJmZXRjaGVkVHJhZGVzIiwic2V0SW50ZXJ2YWwiLCJ0cmFkZVVwZGF0ZUludGVydmFsIiwibWluSGVpZ2h0Iiwic3VjY2VzcyIsInJlbG9hZENoYXJ0Iiwid2FybiIsImZpbHRlcmVkVHJhZGVzIiwiYXBwbHlNYXJrZXJzIiwidGltZXJJZCIsImRpdiIsImNsYXNzTmFtZSIsImJ1dHRvbiIsIm9uQ2xpY2siLCJzcGFuIiwidG9Mb2NhbGVUaW1lU3RyaW5nIiwiaDMiLCJ0YWJsZSIsInRoZWFkIiwidHIiLCJ0aCIsInNjb3BlIiwidGJvZHkiLCJ0ZCIsInN0b3BMb3NzIiwidGFrZVByb2ZpdCIsInJpc2tSZXdhcmQiLCJ0b0xvY2FsZVN0cmluZyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/components/ChartComponent.js\n"));

/***/ })

});