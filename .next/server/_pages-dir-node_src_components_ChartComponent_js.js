"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_pages-dir-node_src_components_ChartComponent_js";
exports.ids = ["_pages-dir-node_src_components_ChartComponent_js"];
exports.modules = {

/***/ "(pages-dir-node)/./src/components/ChartComponent.js":
/*!******************************************!*\
  !*** ./src/components/ChartComponent.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lightweight_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightweight-charts */ \"lightweight-charts\");\n/* harmony import */ var _barrel_optimize_names_Activity_ArrowDown_ArrowUp_Clock_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Activity,ArrowDown,ArrowUp,Clock,X!=!lucide-react */ \"(pages-dir-node)/__barrel_optimize__?names=Activity,ArrowDown,ArrowUp,Clock,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([lightweight_charts__WEBPACK_IMPORTED_MODULE_2__]);\nlightweight_charts__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Add helper function for formatting price values consistently\nconst formatPrice = (price, pair)=>{\n    if (price === null || price === undefined) return '';\n    const precision = pair.includes('JPY') ? 3 : 5;\n    return price.toFixed(precision);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(({ pair, timeframe, externalTrades }, ref)=>{\n    // First, ensure all references are initialized at the component top level\n    // to avoid \"Cannot access uninitialized variable\" errors\n    // Define refs first - before any functions that might use them\n    const chartContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const candlestickSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const volumeSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const priceLabelRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const markerSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const resizeObserverRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const timerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const updateIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const isMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(true);\n    const isFetchingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const chartInitializedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const isRetryingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const containerReadyRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const tradesContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const wsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Define state variables next\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [currentPrice, setCurrentPrice] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [priceChangePositive, setPriceChangePositive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [lastUpdateTime, setLastUpdateTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [trades, setTrades] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isFetchingTrades, setIsFetchingTrades] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Define utility functions before they're used\n    const cleanupTimersAndIntervals = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[cleanupTimersAndIntervals]\": ()=>{\n            if (timerRef.current) {\n                clearTimeout(timerRef.current);\n                timerRef.current = null;\n            }\n            if (updateIntervalRef.current) {\n                clearInterval(updateIntervalRef.current);\n                updateIntervalRef.current = null;\n            }\n            if (resizeObserverRef.current) {\n                resizeObserverRef.current.disconnect();\n                resizeObserverRef.current = null;\n            }\n        }\n    }[\"useCallback[cleanupTimersAndIntervals]\"], []);\n    const cleanupChart = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[cleanupChart]\": ()=>{\n            if (chartRef.current) {\n                try {\n                    chartRef.current.remove();\n                    console.log(\"Chart removed successfully\");\n                } catch (err) {\n                    console.error(\"Error removing chart:\", err);\n                }\n                chartRef.current = null;\n                candlestickSeriesRef.current = null;\n                volumeSeriesRef.current = null;\n                priceLabelRef.current = null;\n            }\n        }\n    }[\"useCallback[cleanupChart]\"], []);\n    // Function to update the chart with current price and its relation to trade targets\n    const updateCurrentPriceIndicator = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[updateCurrentPriceIndicator]\": (price)=>{\n            if (!chartRef.current || !candlestickSeriesRef.current) return;\n            if (priceLabelRef.current) {\n                try {\n                    priceLabelRef.current.applyOptions({\n                        price,\n                        title: `Live: ${formatPrice(price, pair)}`,\n                        axisLabelVisible: true\n                    });\n                } catch (err) {\n                    console.error(\"Error updating price line:\", err);\n                }\n            }\n        // We've removed the trade progress indicator UI, so we don't need to calculate\n        // progress percentages toward targets anymore. Just let the price lines show visually\n        // where the entry, SL and TP levels are on the chart.\n        }\n    }[\"useCallback[updateCurrentPriceIndicator]\"], [\n        pair\n    ]);\n    // Define fetchCandleData before handleRetry to avoid circular reference\n    const fetchCandleData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[fetchCandleData]\": ()=>{\n            // Skip if already fetching\n            if (isFetchingRef.current || !isMountedRef.current) {\n                console.log(\"Fetch already in progress or component unmounted, skipping\");\n                return Promise.resolve();\n            }\n            // Skip if no chart reference exists\n            if (!chartRef.current || !candlestickSeriesRef.current) {\n                console.log(\"Chart references not available, skipping data fetch\");\n                return Promise.resolve();\n            }\n            console.log(`Fetching candle data for ${pair}/${timeframe}`);\n            isFetchingRef.current = true;\n            return fetch(`/api/candles?pair=${pair}&timeframe=${timeframe}&_=${Date.now()}`, {\n                headers: {\n                    'Cache-Control': 'no-cache, no-store',\n                    'Pragma': 'no-cache'\n                }\n            }).then({\n                \"useCallback[fetchCandleData]\": (response)=>{\n                    if (!response.ok) {\n                        throw new Error(`API error: ${response.status}`);\n                    }\n                    return response.json();\n                }\n            }[\"useCallback[fetchCandleData]\"]).then({\n                \"useCallback[fetchCandleData]\": (data)=>{\n                    // Check if component still mounted and references valid\n                    if (!isMountedRef.current || !chartRef.current || !candlestickSeriesRef.current) {\n                        console.log(\"Component unmounted or references lost during fetch\");\n                        return;\n                    }\n                    console.log(`Received ${data.candles?.length || 0} candles`);\n                    if (!data.candles || !Array.isArray(data.candles) || data.candles.length === 0) {\n                        throw new Error('No valid candle data received');\n                    }\n                    // Format candle data safely\n                    const candleData = data.candles.filter({\n                        \"useCallback[fetchCandleData].candleData\": (candle)=>candle && typeof candle.time === 'number'\n                    }[\"useCallback[fetchCandleData].candleData\"]).map({\n                        \"useCallback[fetchCandleData].candleData\": (candle)=>({\n                                time: candle.time,\n                                open: Number(candle.o) || 0,\n                                high: Number(candle.h) || 0,\n                                low: Number(candle.l) || 0,\n                                close: Number(candle.c) || 0\n                            })\n                    }[\"useCallback[fetchCandleData].candleData\"]);\n                    if (candleData.length === 0) {\n                        throw new Error('No valid candles after filtering');\n                    }\n                    // Set the data\n                    candlestickSeriesRef.current.setData(candleData);\n                    // Update price if available\n                    if (data.currentPrice !== undefined) {\n                        const numericPrice = Number(data.currentPrice);\n                        if (!isNaN(numericPrice)) {\n                            // Determine price direction\n                            if (currentPrice !== null) {\n                                setPriceChangePositive(numericPrice >= currentPrice);\n                            }\n                            setCurrentPrice(numericPrice);\n                            // Update price line and trade progress indicators\n                            updateCurrentPriceIndicator(numericPrice);\n                        }\n                    }\n                    // Fit content\n                    try {\n                        chartRef.current.timeScale().fitContent();\n                    } catch (err) {\n                        console.error(\"Error fitting chart content:\", err);\n                    }\n                    // Update last update time\n                    setLastUpdateTime(new Date());\n                    setIsLoading(false);\n                    setError(null);\n                    // Ensure chart is showing appropriate price range\n                    try {\n                        // Adjust the visible range to ensure we see enough price levels\n                        const visibleRange = chartRef.current.timeScale().getVisibleRange();\n                        if (visibleRange) {\n                            const priceScale = chartRef.current.priceScale('right');\n                            if (priceScale) {\n                                // Force price scale update\n                                priceScale.applyOptions({\n                                    autoScale: true,\n                                    mode: 0,\n                                    ticksVisible: true,\n                                    scaleMargins: {\n                                        top: 0.1,\n                                        bottom: 0.1\n                                    }\n                                });\n                            }\n                        }\n                        // Fit content with animation\n                        chartRef.current.timeScale().fitContent();\n                    } catch (err) {\n                        console.error(\"Error adjusting price scale:\", err);\n                    }\n                    return data;\n                }\n            }[\"useCallback[fetchCandleData]\"]).catch({\n                \"useCallback[fetchCandleData]\": (error)=>{\n                    console.error('Error fetching candle data:', error);\n                    if (isMountedRef.current) {\n                        setError(`Failed to load data: ${error.message}`);\n                        setIsLoading(false);\n                    }\n                    return null;\n                }\n            }[\"useCallback[fetchCandleData]\"]).finally({\n                \"useCallback[fetchCandleData]\": ()=>{\n                    isFetchingRef.current = false;\n                }\n            }[\"useCallback[fetchCandleData]\"]);\n        }\n    }[\"useCallback[fetchCandleData]\"], [\n        pair,\n        timeframe,\n        currentPrice\n    ]);\n    // Define fetchTrades function to get trade data\n    const fetchTrades = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[fetchTrades]\": ()=>{\n            if (isFetchingTrades || !isMountedRef.current) {\n                console.log(\"Trades fetch already in progress or component unmounted, skipping\");\n                return Promise.resolve();\n            }\n            console.log(`Fetching trades for ${pair}/${timeframe}`);\n            setIsFetchingTrades(true);\n            return fetch(`/api/trades?pair=${pair}&timeframe=${timeframe}&_=${Date.now()}`, {\n                headers: {\n                    'Cache-Control': 'no-cache, no-store',\n                    'Pragma': 'no-cache'\n                }\n            }).then({\n                \"useCallback[fetchTrades]\": (response)=>{\n                    if (!response.ok) {\n                        throw new Error(`API error: ${response.status}`);\n                    }\n                    return response.json();\n                }\n            }[\"useCallback[fetchTrades]\"]).then({\n                \"useCallback[fetchTrades]\": (data)=>{\n                    if (!isMountedRef.current) {\n                        console.log(\"Component unmounted during trades fetch\");\n                        return;\n                    }\n                    console.log(`Received ${data.trades?.length || 0} trades`);\n                    if (!data.trades || !Array.isArray(data.trades)) {\n                        throw new Error('No valid trade data received');\n                    }\n                    setTrades(data.trades);\n                    // Update markers on chart if chart is initialized\n                    if (chartRef.current && candlestickSeriesRef.current) {\n                        updateTradeMarkers(data.trades);\n                    }\n                    return data.trades;\n                }\n            }[\"useCallback[fetchTrades]\"]).catch({\n                \"useCallback[fetchTrades]\": (error)=>{\n                    console.error('Error fetching trade data:', error);\n                    return [];\n                }\n            }[\"useCallback[fetchTrades]\"]).finally({\n                \"useCallback[fetchTrades]\": ()=>{\n                    setIsFetchingTrades(false);\n                }\n            }[\"useCallback[fetchTrades]\"]);\n        }\n    }[\"useCallback[fetchTrades]\"], [\n        pair,\n        timeframe\n    ]);\n    // Function to update trade markers on the chart\n    const updateTradeMarkers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[updateTradeMarkers]\": (tradeData)=>{\n            if (!chartRef.current) return;\n            try {\n                // Ensure we have valid trade data\n                if (!tradeData || !Array.isArray(tradeData) || tradeData.length === 0) {\n                    // Clear markers if no trades\n                    if (markerSeriesRef.current) {\n                        markerSeriesRef.current.setMarkers([]);\n                    } else if (candlestickSeriesRef.current) {\n                        candlestickSeriesRef.current.setMarkers([]);\n                    }\n                    return;\n                }\n                // Filter trades for this pair and timeframe\n                const relevantTrades = tradeData.filter({\n                    \"useCallback[updateTradeMarkers].relevantTrades\": (trade)=>trade.pair === pair && (trade.timeframe === timeframe || !timeframe)\n                }[\"useCallback[updateTradeMarkers].relevantTrades\"]);\n                console.log(`Creating markers for ${relevantTrades.length} relevant trades`);\n                // Create markers for entry/exit points\n                const markers = relevantTrades.flatMap({\n                    \"useCallback[updateTradeMarkers].markers\": (trade)=>{\n                        const time = new Date(trade.timestamp).getTime() / 1000;\n                        const markers = [];\n                        // Entry marker\n                        markers.push({\n                            time,\n                            position: trade.direction === 'buy' ? 'belowBar' : 'aboveBar',\n                            color: trade.direction === 'buy' ? '#10b981' : '#ef4444',\n                            shape: trade.direction === 'buy' ? 'arrowUp' : 'arrowDown',\n                            text: `Entry ${formatPrice(trade.entry, pair)}`,\n                            size: 2\n                        });\n                        // Exit marker (for closed trades)\n                        if (trade.status !== 'open') {\n                            markers.push({\n                                time: time + 60 * 60,\n                                position: trade.direction === 'buy' ? 'aboveBar' : 'belowBar',\n                                color: trade.status === 'win' ? '#10b981' : '#ef4444',\n                                shape: 'circle',\n                                text: `Exit (${trade.status.toUpperCase()})`,\n                                size: 2\n                            });\n                        }\n                        return markers;\n                    }\n                }[\"useCallback[updateTradeMarkers].markers\"]);\n                console.log(`Setting ${markers.length} markers on chart`);\n                // Set markers to the series\n                if (markerSeriesRef.current) {\n                    try {\n                        markerSeriesRef.current.setMarkers(markers);\n                    } catch (err) {\n                        console.error(\"Error setting markers on marker series:\", err);\n                        // Fall back to candlestick series\n                        if (candlestickSeriesRef.current) {\n                            candlestickSeriesRef.current.setMarkers(markers);\n                        }\n                    }\n                } else if (candlestickSeriesRef.current) {\n                    candlestickSeriesRef.current.setMarkers(markers);\n                }\n                // Add price lines for open trades to visualize entry/exit levels\n                if (candlestickSeriesRef.current) {\n                    // First, try to remove any existing trade price lines\n                    try {\n                        // Use a try-catch block since the priceLines method might not exist\n                        // Instead of trying to get all price lines, just attempt to remove the ones we know about\n                        // by their IDs (which we'll track in state)\n                        const openTrades = relevantTrades.filter({\n                            \"useCallback[updateTradeMarkers].openTrades\": (trade)=>trade.status === 'open'\n                        }[\"useCallback[updateTradeMarkers].openTrades\"]);\n                        openTrades.forEach({\n                            \"useCallback[updateTradeMarkers]\": (trade)=>{\n                                try {\n                                    // Try to remove existing lines for this trade ID if they exist\n                                    candlestickSeriesRef.current.removePriceLine(trade.id + '_entry');\n                                    candlestickSeriesRef.current.removePriceLine(trade.id + '_sl');\n                                    candlestickSeriesRef.current.removePriceLine(trade.id + '_tp');\n                                } catch (err) {\n                                // Ignore errors from removing non-existent lines\n                                }\n                            }\n                        }[\"useCallback[updateTradeMarkers]\"]);\n                    } catch (err) {\n                        console.error(\"Error removing existing price lines:\", err);\n                    }\n                    // Add new price lines for open trades\n                    const openTrades = relevantTrades.filter({\n                        \"useCallback[updateTradeMarkers].openTrades\": (trade)=>trade.status === 'open'\n                    }[\"useCallback[updateTradeMarkers].openTrades\"]);\n                    openTrades.forEach({\n                        \"useCallback[updateTradeMarkers]\": (trade)=>{\n                            // Entry price line\n                            try {\n                            // Entry price line - Removed to eliminate green horizontal line when direction is 'buy'\n                            // candlestickSeriesRef.current.createPriceLine({\n                            //   price: trade.entry,\n                            //   color: trade.direction === 'buy' ? '#10b981' : '#ef4444',\n                            //   lineWidth: 2,\n                            //   lineStyle: 1, // Solid\n                            //   axisLabelVisible: false, // Hide axis label to prevent clutter\n                            //   title: `Entry ${formatPrice(trade.entry, pair)}`,\n                            //   id: trade.id + '_entry' // Use a simpler ID format\n                            // });\n                            // No longer showing stop loss line\n                            // Take Profit price line - Removed to eliminate green horizontal line\n                            // candlestickSeriesRef.current.createPriceLine({\n                            //   price: trade.takeProfit,\n                            //   color: '#10b981', // Green\n                            //   lineWidth: 2,\n                            //   lineStyle: 3, // Dotted\n                            //   axisLabelVisible: false, // Hide axis label to prevent clutter\n                            //   title: `TP ${formatPrice(trade.takeProfit, pair)}`,\n                            //   id: trade.id + '_tp'\n                            // });\n                            } catch (err) {\n                                console.error(\"Error adding trade price lines:\", err);\n                            }\n                        }\n                    }[\"useCallback[updateTradeMarkers]\"]);\n                }\n            } catch (err) {\n                console.error(\"Error updating trade markers:\", err);\n            }\n        }\n    }[\"useCallback[updateTradeMarkers]\"], [\n        pair,\n        timeframe\n    ]);\n    // Now define handleRetry after fetchCandleData is defined\n    const handleRetry = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"useCallback[handleRetry]\": ()=>{\n            console.log(\"Retry button clicked, hard reset\");\n            if (isRetryingRef.current) {\n                console.log(\"Already retrying, ignoring duplicate request\");\n                return;\n            }\n            isRetryingRef.current = true;\n            setIsLoading(true);\n            setError(null);\n            // Clean up existing resources\n            cleanupChart();\n            cleanupTimersAndIntervals();\n            // Create chart with delay to ensure clean state\n            setTimeout({\n                \"useCallback[handleRetry]\": ()=>{\n                    if (!chartContainerRef.current || !isMountedRef.current) {\n                        setError(\"Chart container not available\");\n                        setIsLoading(false);\n                        isRetryingRef.current = false;\n                        return;\n                    }\n                    try {\n                        const container = chartContainerRef.current;\n                        // Set container styles\n                        container.style.width = '100%';\n                        container.style.height = '100%';\n                        container.style.position = 'relative';\n                        container.style.display = 'block';\n                        // Get dimensions\n                        const width = Math.max(container.clientWidth || 300, 300);\n                        const height = Math.max(container.clientHeight || 300, 300);\n                        console.log(`Creating chart with dimensions: ${width}x${height}`);\n                        // Create chart with minimal options\n                        const chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(container, {\n                            width,\n                            height,\n                            layout: {\n                                background: {\n                                    color: '#121212'\n                                },\n                                textColor: '#d1d4dc',\n                                fontSize: 12\n                            },\n                            grid: {\n                                vertLines: {\n                                    color: 'rgba(42, 46, 57, 0.4)',\n                                    style: 1\n                                },\n                                horzLines: {\n                                    color: 'transparent',\n                                    style: 1,\n                                    visible: false\n                                }\n                            },\n                            rightPriceScale: {\n                                borderColor: 'rgba(197, 203, 206, 0.3)',\n                                borderVisible: true,\n                                scaleMargins: {\n                                    top: 0.1,\n                                    bottom: 0.1\n                                },\n                                minimumHeight: 20,\n                                textColor: '#d1d4dc',\n                                fontSize: 11,\n                                alignLabels: true,\n                                mode: 0,\n                                autoScale: true,\n                                entireTextOnly: false,\n                                ticksVisible: true,\n                                visible: true\n                            },\n                            timeScale: {\n                                borderColor: 'rgba(197, 203, 206, 0.3)',\n                                timeVisible: true,\n                                secondsVisible: false,\n                                tickMarkFormatter: {\n                                    \"useCallback[handleRetry].chart\": (time, tickMarkType, locale)=>{\n                                        const date = new Date(time * 1000);\n                                        if (timeframe === '1d' || timeframe === 'Daily' || timeframe === 'Weekly') {\n                                            return date.toLocaleDateString('en-US', {\n                                                month: 'short',\n                                                day: 'numeric'\n                                            });\n                                        } else {\n                                            const hours = date.getHours().toString().padStart(2, '0');\n                                            const minutes = date.getMinutes().toString().padStart(2, '0');\n                                            return `${hours}:${minutes}`;\n                                        }\n                                    }\n                                }[\"useCallback[handleRetry].chart\"]\n                            },\n                            crosshair: {\n                                mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,\n                                vertLine: {\n                                    color: 'rgba(224, 227, 235, 0.4)',\n                                    width: 1,\n                                    style: 1,\n                                    visible: true,\n                                    labelVisible: true\n                                },\n                                horzLine: {\n                                    color: 'transparent',\n                                    width: 1,\n                                    style: 1,\n                                    visible: false,\n                                    labelVisible: true\n                                }\n                            },\n                            watermark: {\n                                visible: false\n                            }\n                        });\n                        // Save references\n                        chartRef.current = chart;\n                        candlestickSeriesRef.current = chart.addCandlestickSeries({\n                            upColor: '#10b981',\n                            downColor: '#ef4444',\n                            borderVisible: false,\n                            wickUpColor: '#10b981',\n                            wickDownColor: '#ef4444'\n                        });\n                        // Add price line\n                        priceLabelRef.current = candlestickSeriesRef.current.createPriceLine({\n                            price: 0,\n                            color: '#2196F3',\n                            lineWidth: 1,\n                            axisLabelVisible: true,\n                            title: 'Live'\n                        });\n                        // Set up resize handler\n                        const handleResize = {\n                            \"useCallback[handleRetry].handleResize\": ()=>{\n                                if (!chartRef.current || !container) return;\n                                const newWidth = container.clientWidth;\n                                const newHeight = container.clientHeight;\n                                if (newWidth > 0 && newHeight > 0) {\n                                    try {\n                                        chartRef.current.resize(newWidth, newHeight);\n                                    } catch (err) {\n                                        console.error(\"Error resizing chart:\", err);\n                                    }\n                                }\n                            }\n                        }[\"useCallback[handleRetry].handleResize\"];\n                        // Set up resize observer\n                        try {\n                            resizeObserverRef.current = new ResizeObserver(handleResize);\n                            resizeObserverRef.current.observe(container);\n                        } catch (err) {\n                            console.error(\"Error setting up ResizeObserver:\", err);\n                            window.addEventListener('resize', handleResize);\n                        }\n                        // Load initial data\n                        fetchCandleData().then({\n                            \"useCallback[handleRetry]\": ()=>{\n                                console.log(\"Initial data loaded successfully\");\n                                setIsLoading(false);\n                            }\n                        }[\"useCallback[handleRetry]\"]).catch({\n                            \"useCallback[handleRetry]\": (err)=>{\n                                console.error(\"Failed to load initial data:\", err);\n                                setError(`Failed to load data: ${err.message}`);\n                                setIsLoading(false);\n                            }\n                        }[\"useCallback[handleRetry]\"]).finally({\n                            \"useCallback[handleRetry]\": ()=>{\n                                isRetryingRef.current = false;\n                            }\n                        }[\"useCallback[handleRetry]\"]);\n                    } catch (err) {\n                        console.error(\"Error in chart creation:\", err);\n                        setError(`Chart creation failed: ${err.message}`);\n                        setIsLoading(false);\n                        isRetryingRef.current = false;\n                    }\n                }\n            }[\"useCallback[handleRetry]\"], 300);\n        }\n    }[\"useCallback[handleRetry]\"], [\n        pair,\n        timeframe,\n        cleanupChart,\n        cleanupTimersAndIntervals,\n        fetchCandleData\n    ]);\n    // Initialize chart only once\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            console.log(\"Chart initialization effect running\");\n            // Call handleRetry to initialize the chart\n            handleRetry();\n            // Clean up on unmount\n            return ({\n                \"useEffect\": ()=>{\n                    isMountedRef.current = false;\n                    cleanupChart();\n                    cleanupTimersAndIntervals();\n                }\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], []); // Empty dependency array - run only once\n    // Set up data refresh interval\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            if (!chartRef.current || !candlestickSeriesRef.current) return;\n            console.log(\"Setting up data refresh interval\");\n            // Update every 30 seconds\n            updateIntervalRef.current = setInterval({\n                \"useEffect\": ()=>{\n                    if (isMountedRef.current && !isFetchingRef.current) {\n                        fetchCandleData().catch({\n                            \"useEffect\": (err)=>{\n                                console.error(\"Error in interval fetch:\", err);\n                            }\n                        }[\"useEffect\"]);\n                    }\n                }\n            }[\"useEffect\"], 30000);\n            return ({\n                \"useEffect\": ()=>{\n                    if (updateIntervalRef.current) {\n                        clearInterval(updateIntervalRef.current);\n                        updateIntervalRef.current = null;\n                    }\n                }\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], [\n        fetchCandleData\n    ]);\n    // Set up trade data fetch\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            if (!chartRef.current || !candlestickSeriesRef.current) return;\n            console.log(\"Fetching initial trade data\");\n            fetchTrades().catch({\n                \"useEffect\": (err)=>{\n                    console.error(\"Error fetching initial trade data:\", err);\n                }\n            }[\"useEffect\"]);\n            // Set up interval to refresh trade data\n            const tradeUpdateInterval = setInterval({\n                \"useEffect.tradeUpdateInterval\": ()=>{\n                    if (isMountedRef.current && !isFetchingTrades) {\n                        fetchTrades().catch({\n                            \"useEffect.tradeUpdateInterval\": (err)=>{\n                                console.error(\"Error in trade interval fetch:\", err);\n                            }\n                        }[\"useEffect.tradeUpdateInterval\"]);\n                    }\n                }\n            }[\"useEffect.tradeUpdateInterval\"], 30000);\n            return ({\n                \"useEffect\": ()=>{\n                    clearInterval(tradeUpdateInterval);\n                }\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], [\n        fetchTrades\n    ]);\n    // Use useLayoutEffect to check container dimensions before mounting\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)({\n        \"useLayoutEffect\": ()=>{\n            if (chartContainerRef.current) {\n                const container = chartContainerRef.current;\n                // Force container to be visible and have dimensions\n                container.style.width = '100%';\n                container.style.height = '100%';\n                container.style.minHeight = '400px';\n                container.style.display = 'block';\n                container.style.position = 'relative';\n                // Log dimensions\n                console.log(`Initial container dimensions: ${container.clientWidth}x${container.clientHeight}`);\n                // Set container ready if dimensions are valid\n                if (container.clientWidth > 0 && container.clientHeight > 0) {\n                    containerReadyRef.current = true;\n                } else {\n                    // Force dimensions one more time\n                    container.style.width = '100vw';\n                    container.style.height = '70vh';\n                    // Check again after a moment\n                    setTimeout({\n                        \"useLayoutEffect\": ()=>{\n                            console.log(`Delayed container dimensions: ${container.clientWidth}x${container.clientHeight}`);\n                            containerReadyRef.current = container.clientWidth > 0 && container.clientHeight > 0;\n                        }\n                    }[\"useLayoutEffect\"], 100);\n                }\n            }\n        }\n    }[\"useLayoutEffect\"], []);\n    // Initialize chart when component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            console.log(\"ChartComponent mounted\");\n            isMountedRef.current = true;\n            // Wait for next tick to ensure container is in DOM\n            setTimeout({\n                \"useEffect\": ()=>{\n                    if (!containerReadyRef.current && chartContainerRef.current) {\n                        // Check dimensions again\n                        const container = chartContainerRef.current;\n                        console.log(`Container dimensions before init: ${container.clientWidth}x${container.clientHeight}`);\n                        // Force minimum size if needed\n                        if (container.clientWidth < 10 || container.clientHeight < 10) {\n                            container.style.width = '100%';\n                            container.style.height = '400px';\n                            container.style.minHeight = '400px';\n                        }\n                    }\n                    handleRetry();\n                    // Set up data refresh interval\n                    updateIntervalRef.current = setInterval({\n                        \"useEffect\": ()=>{\n                            if (isMountedRef.current && !isFetchingRef.current) {\n                                fetchCandleData().catch({\n                                    \"useEffect\": (err)=>{\n                                        console.error(\"Error in interval fetch:\", err);\n                                    }\n                                }[\"useEffect\"]);\n                            }\n                        }\n                    }[\"useEffect\"], 30000);\n                }\n            }[\"useEffect\"], 300);\n            return ({\n                \"useEffect\": ()=>{\n                    console.log(\"ChartComponent unmounting\");\n                    isMountedRef.current = false;\n                    cleanupChart();\n                    cleanupTimersAndIntervals();\n                }\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], [\n        handleRetry,\n        fetchCandleData,\n        cleanupChart,\n        cleanupTimersAndIntervals\n    ]);\n    // Expose methods to parent via ref\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, {\n        \"useImperativeHandle\": ()=>({\n                reloadChart: ({\n                    \"useImperativeHandle\": ()=>{\n                        console.log(\"Reload chart method called from parent\");\n                        if (chartRef.current) {\n                            fetchCandleData().catch({\n                                \"useImperativeHandle\": (err)=>{\n                                    console.error(\"Error reloading chart data:\", err);\n                                }\n                            }[\"useImperativeHandle\"]);\n                            fetchTrades().catch({\n                                \"useImperativeHandle\": (err)=>{\n                                    console.error(\"Error reloading trade data:\", err);\n                                }\n                            }[\"useImperativeHandle\"]);\n                        } else {\n                            console.warn(\"Chart not initialized, cannot reload\");\n                        }\n                    }\n                })[\"useImperativeHandle\"]\n            })\n    }[\"useImperativeHandle\"]);\n    // Sync with external trades\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            if (externalTrades && Array.isArray(externalTrades)) {\n                console.log(`Received ${externalTrades.length} external trades`);\n                // Filter trades for the current pair and timeframe\n                const filteredTrades = externalTrades.filter({\n                    \"useEffect.filteredTrades\": (trade)=>trade.pair === pair && (trade.timeframe === timeframe || !timeframe)\n                }[\"useEffect.filteredTrades\"]);\n                setTrades(filteredTrades);\n                // Update markers if chart is ready\n                if (chartRef.current && candlestickSeriesRef.current) {\n                    updateTradeMarkers(filteredTrades);\n                }\n            }\n        }\n    }[\"useEffect\"], [\n        externalTrades,\n        pair,\n        timeframe,\n        updateTradeMarkers\n    ]);\n    // Create a separate effect specifically for updating markers when externalTrades change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            if (!chartRef.current) return;\n            // Local function to update markers without dependency on updateTradeMarkers\n            const applyMarkers = {\n                \"useEffect.applyMarkers\": ()=>{\n                    if (externalTrades && Array.isArray(externalTrades)) {\n                        console.log(`External trades updated, updating markers (${externalTrades.length} trades)`);\n                        // Filter trades for this pair and timeframe\n                        const relevantTrades = externalTrades.filter({\n                            \"useEffect.applyMarkers.relevantTrades\": (trade)=>trade.pair === pair && (trade.timeframe === timeframe || !timeframe)\n                        }[\"useEffect.applyMarkers.relevantTrades\"]);\n                        if (relevantTrades.length === 0) {\n                            console.log('No relevant trades to display');\n                            return;\n                        }\n                        console.log(`Found ${relevantTrades.length} relevant trades for markers`);\n                        try {\n                            // Create markers for entry/exit points\n                            const markers = relevantTrades.flatMap({\n                                \"useEffect.applyMarkers.markers\": (trade)=>{\n                                    const time = new Date(trade.timestamp).getTime() / 1000;\n                                    const markers = [];\n                                    // Entry marker\n                                    markers.push({\n                                        time,\n                                        position: trade.direction === 'buy' ? 'belowBar' : 'aboveBar',\n                                        color: trade.direction === 'buy' ? '#10b981' : '#ef4444',\n                                        shape: trade.direction === 'buy' ? 'arrowUp' : 'arrowDown',\n                                        text: `Entry ${formatPrice(trade.entry, pair)}`,\n                                        size: 2\n                                    });\n                                    // Exit marker (for closed trades)\n                                    if (trade.status !== 'open') {\n                                        markers.push({\n                                            time: time + 60 * 60,\n                                            position: trade.direction === 'buy' ? 'aboveBar' : 'belowBar',\n                                            color: trade.status === 'win' ? '#10b981' : '#ef4444',\n                                            shape: 'circle',\n                                            text: `Exit (${trade.status.toUpperCase()})`,\n                                            size: 2\n                                        });\n                                    }\n                                    return markers;\n                                }\n                            }[\"useEffect.applyMarkers.markers\"]);\n                            console.log(`Setting ${markers.length} markers on chart`);\n                            // Set markers to the appropriate series\n                            if (markerSeriesRef.current) {\n                                markerSeriesRef.current.setMarkers(markers);\n                            } else if (candlestickSeriesRef.current) {\n                                candlestickSeriesRef.current.setMarkers(markers);\n                            }\n                            // Add price lines for open trades to visualize entry/exit levels\n                            if (candlestickSeriesRef.current) {\n                                // First, try to remove any existing trade price lines\n                                try {\n                                    // Use a try-catch block since the priceLines method might not exist\n                                    // Instead of trying to get all price lines, just attempt to remove the ones we know about\n                                    // by their IDs (which we'll track in state)\n                                    const openTrades = relevantTrades.filter({\n                                        \"useEffect.applyMarkers.openTrades\": (trade)=>trade.status === 'open'\n                                    }[\"useEffect.applyMarkers.openTrades\"]);\n                                    openTrades.forEach({\n                                        \"useEffect.applyMarkers\": (trade)=>{\n                                            try {\n                                                // Try to remove existing lines for this trade ID if they exist\n                                                candlestickSeriesRef.current.removePriceLine(trade.id + '_entry');\n                                                candlestickSeriesRef.current.removePriceLine(trade.id + '_sl');\n                                                candlestickSeriesRef.current.removePriceLine(trade.id + '_tp');\n                                            } catch (err) {\n                                            // Ignore errors from removing non-existent lines\n                                            }\n                                        }\n                                    }[\"useEffect.applyMarkers\"]);\n                                } catch (err) {\n                                    console.error(\"Error removing existing price lines:\", err);\n                                }\n                                // Add new price lines for open trades\n                                const openTrades = relevantTrades.filter({\n                                    \"useEffect.applyMarkers.openTrades\": (trade)=>trade.status === 'open'\n                                }[\"useEffect.applyMarkers.openTrades\"]);\n                                openTrades.forEach({\n                                    \"useEffect.applyMarkers\": (trade)=>{\n                                        // Entry price line\n                                        try {\n                                        // Entry price line - Removed to eliminate green horizontal line when direction is 'buy'\n                                        // candlestickSeriesRef.current.createPriceLine({\n                                        //   price: trade.entry,\n                                        //   color: trade.direction === 'buy' ? '#10b981' : '#ef4444',\n                                        //   lineWidth: 2,\n                                        //   lineStyle: 1, // Solid\n                                        //   axisLabelVisible: false, // Hide axis label to prevent clutter\n                                        //   title: `Entry ${formatPrice(trade.entry, pair)}`,\n                                        //   id: trade.id + '_entry' // Use a simpler ID format\n                                        // });\n                                        // No longer showing stop loss line\n                                        // Take Profit price line - Removed to eliminate green horizontal line\n                                        // candlestickSeriesRef.current.createPriceLine({\n                                        //   price: trade.takeProfit,\n                                        //   color: '#10b981', // Green\n                                        //   lineWidth: 2,\n                                        //   lineStyle: 3, // Dotted\n                                        //   axisLabelVisible: false, // Hide axis label to prevent clutter\n                                        //   title: `TP ${formatPrice(trade.takeProfit, pair)}`,\n                                        //   id: trade.id + '_tp'\n                                        // });\n                                        } catch (err) {\n                                            console.error(\"Error adding trade price lines:\", err);\n                                        }\n                                    }\n                                }[\"useEffect.applyMarkers\"]);\n                            }\n                        } catch (err) {\n                            console.error(\"Error setting markers:\", err);\n                        }\n                    }\n                }\n            }[\"useEffect.applyMarkers\"];\n            // Apply with a short timeout to ensure chart is ready\n            const timerId = setTimeout(applyMarkers, 100);\n            return ({\n                \"useEffect\": ()=>clearTimeout(timerId)\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], [\n        externalTrades,\n        pair,\n        timeframe\n    ]);\n    // WebSocket connection for live price updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useEffect\": ()=>{\n            const connectWebSocket = {\n                \"useEffect.connectWebSocket\": ()=>{\n                    if (wsRef.current?.readyState === WebSocket.OPEN) {\n                        console.log('WebSocket already connected');\n                        return;\n                    }\n                    const ws = new WebSocket(`ws://${window.location.hostname}:3001`);\n                    ws.onopen = ({\n                        \"useEffect.connectWebSocket\": ()=>{\n                            console.log('WebSocket connected');\n                            // Subscribe to price updates for the current pair\n                            ws.send(JSON.stringify({\n                                type: 'subscribe',\n                                pair: pair\n                            }));\n                        }\n                    })[\"useEffect.connectWebSocket\"];\n                    ws.onmessage = ({\n                        \"useEffect.connectWebSocket\": (event)=>{\n                            try {\n                                const data = JSON.parse(event.data);\n                                if (data.type === 'price' && data.pair === pair) {\n                                    const numericPrice = Number(data.price);\n                                    if (!isNaN(numericPrice)) {\n                                        // Update price direction\n                                        if (currentPrice !== null) {\n                                            setPriceChangePositive(numericPrice >= currentPrice);\n                                        }\n                                        setCurrentPrice(numericPrice);\n                                        setLastUpdateTime(new Date());\n                                        // Update price line on chart\n                                        if (chartRef.current && candlestickSeriesRef.current) {\n                                            updateCurrentPriceIndicator(numericPrice);\n                                            // Update the last candle if it exists\n                                            const lastCandle = candlestickSeriesRef.current.data();\n                                            if (lastCandle && lastCandle.length > 0) {\n                                                const updatedCandle = {\n                                                    ...lastCandle[lastCandle.length - 1],\n                                                    close: numericPrice,\n                                                    high: Math.max(lastCandle[lastCandle.length - 1].high, numericPrice),\n                                                    low: Math.min(lastCandle[lastCandle.length - 1].low, numericPrice)\n                                                };\n                                                candlestickSeriesRef.current.update(updatedCandle);\n                                            }\n                                        }\n                                    }\n                                }\n                            } catch (err) {\n                                console.error('Error processing WebSocket message:', err);\n                            }\n                        }\n                    })[\"useEffect.connectWebSocket\"];\n                    ws.onerror = ({\n                        \"useEffect.connectWebSocket\": (error)=>{\n                            console.error('WebSocket error:', error);\n                        }\n                    })[\"useEffect.connectWebSocket\"];\n                    ws.onclose = ({\n                        \"useEffect.connectWebSocket\": ()=>{\n                            console.log('WebSocket disconnected, attempting to reconnect...');\n                            wsRef.current = null;\n                            setTimeout(connectWebSocket, 5000);\n                        }\n                    })[\"useEffect.connectWebSocket\"];\n                    wsRef.current = ws;\n                }\n            }[\"useEffect.connectWebSocket\"];\n            connectWebSocket();\n            return ({\n                \"useEffect\": ()=>{\n                    if (wsRef.current) {\n                        wsRef.current.close();\n                        wsRef.current = null;\n                    }\n                }\n            })[\"useEffect\"];\n        }\n    }[\"useEffect\"], [\n        pair\n    ]); // Only depend on pair changes, not currentPrice\n    // Return component JSX\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col w-full h-full relative\",\n        style: {\n            minHeight: '400px'\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: chartContainerRef,\n                className: \"flex-1 w-full h-full\",\n                style: {\n                    minHeight: '400px',\n                    width: '100%',\n                    height: '100%',\n                    position: 'relative',\n                    display: 'block'\n                }\n            }, void 0, false, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 971,\n                columnNumber: 7\n            }, undefined),\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex items-center justify-center bg-opacity-75 bg-gray-900 z-10\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-white\",\n                    children: \"Loading chart data...\"\n                }, void 0, false, {\n                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                    lineNumber: 985,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 984,\n                columnNumber: 9\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex flex-col items-center justify-center bg-opacity-75 bg-gray-900 z-10\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-red-500 mb-4\",\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 991,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded\",\n                        onClick: handleRetry,\n                        children: \"Retry\"\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 992,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 990,\n                columnNumber: 9\n            }, undefined),\n            currentPrice && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-2 right-2 flex items-center space-x-2 z-20\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: `text-sm font-mono ${priceChangePositive ? 'text-green-500' : 'text-red-500'}`,\n                        children: formatPrice(currentPrice, pair)\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1003,\n                        columnNumber: 11\n                    }, undefined),\n                    lastUpdateTime && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-xs text-gray-400\",\n                        children: lastUpdateTime.toLocaleTimeString()\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1007,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 1002,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: tradesContainerRef,\n                className: \"w-full bg-gray-900 border-t border-gray-700 overflow-auto\",\n                style: {\n                    height: '150px',\n                    minHeight: '150px'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-2 border-b border-gray-700 bg-gray-800 flex justify-between items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"text-sm font-semibold text-white\",\n                                children: \"Trades\"\n                            }, void 0, false, {\n                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                lineNumber: 1023,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-xs text-gray-400\",\n                                children: [\n                                    trades.length,\n                                    \" \",\n                                    trades.length === 1 ? 'trade' : 'trades',\n                                    \" for \",\n                                    pair,\n                                    \" / \",\n                                    timeframe\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                lineNumber: 1024,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1022,\n                        columnNumber: 9\n                    }, undefined),\n                    trades.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center justify-center h-full text-gray-500 text-sm\",\n                        children: \"No trades found for this pair and timeframe\"\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1030,\n                        columnNumber: 11\n                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"overflow-x-auto\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                            className: \"min-w-full divide-y divide-gray-700\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                                    className: \"bg-gray-800\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Direction\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1038,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Entry\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1039,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Stop Loss\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1040,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Take Profit\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1041,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"R:R\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1042,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Status\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1043,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                scope: \"col\",\n                                                className: \"px-3 py-2 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\",\n                                                children: \"Time\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                lineNumber: 1044,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                        lineNumber: 1037,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                    lineNumber: 1036,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                                    className: \"bg-gray-900 divide-y divide-gray-800\",\n                                    children: trades.map((trade)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                            className: \"hover:bg-gray-800\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"flex items-center\",\n                                                        children: [\n                                                            trade.direction === 'buy' ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Activity_ArrowDown_ArrowUp_Clock_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.ArrowUp, {\n                                                                size: 14,\n                                                                className: \"text-green-500 mr-1\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                                lineNumber: 1053,\n                                                                columnNumber: 27\n                                                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Activity_ArrowDown_ArrowUp_Clock_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.ArrowDown, {\n                                                                size: 14,\n                                                                className: \"text-red-500 mr-1\"\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                                lineNumber: 1055,\n                                                                columnNumber: 27\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: trade.direction === 'buy' ? 'text-green-500' : 'text-red-500',\n                                                                children: trade.direction.toUpperCase()\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                                lineNumber: 1057,\n                                                                columnNumber: 25\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                        lineNumber: 1051,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1050,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm font-mono\",\n                                                    children: formatPrice(trade.entry, pair)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1062,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm font-mono text-red-500\",\n                                                    children: formatPrice(trade.stopLoss, pair)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1065,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm font-mono text-green-500\",\n                                                    children: formatPrice(trade.takeProfit, pair)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1068,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm\",\n                                                    children: trade.riskReward\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1071,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: `inline-flex px-2 text-xs leading-5 font-semibold rounded-full\n                        ${trade.status === 'win' ? 'bg-green-100 text-green-800' : trade.status === 'loss' ? 'bg-red-100 text-red-800' : 'bg-blue-100 text-blue-800'}`,\n                                                        children: trade.status.toUpperCase()\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                        lineNumber: 1075,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1074,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"px-3 py-2 whitespace-nowrap text-sm text-gray-400\",\n                                                    children: new Date(trade.timestamp).toLocaleString()\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                                    lineNumber: 1082,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, trade.id, true, {\n                                            fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                            lineNumber: 1049,\n                                            columnNumber: 19\n                                        }, undefined))\n                                }, void 0, false, {\n                                    fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                                    lineNumber: 1047,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                            lineNumber: 1035,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                        lineNumber: 1034,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n                lineNumber: 1017,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/emraan.adem/Documents/Projects/Nervala/Nervala.files/src/components/ChartComponent.js\",\n        lineNumber: 970,\n        columnNumber: 5\n    }, undefined);\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./src/components/ChartComponent.js\n");

/***/ }),

/***/ "(pages-dir-node)/__barrel_optimize__?names=Activity,ArrowDown,ArrowUp,Clock,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!***************************************************************************************************************************!*\
  !*** __barrel_optimize__?names=Activity,ArrowDown,ArrowUp,Clock,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Activity: () => (/* reexport safe */ _icons_activity_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   ArrowDown: () => (/* reexport safe */ _icons_arrow_down_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   ArrowUp: () => (/* reexport safe */ _icons_arrow_up_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   Clock: () => (/* reexport safe */ _icons_clock_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   X: () => (/* reexport safe */ _icons_x_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _icons_activity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/activity.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/activity.js\");\n/* harmony import */ var _icons_arrow_down_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icons/arrow-down.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/arrow-down.js\");\n/* harmony import */ var _icons_arrow_up_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./icons/arrow-up.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/arrow-up.js\");\n/* harmony import */ var _icons_clock_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./icons/clock.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/clock.js\");\n/* harmony import */ var _icons_x_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./icons/x.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS9fX2JhcnJlbF9vcHRpbWl6ZV9fP25hbWVzPUFjdGl2aXR5LEFycm93RG93bixBcnJvd1VwLENsb2NrLFghPSEuL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vbHVjaWRlLXJlYWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQ3lEO0FBQ0c7QUFDSjtBQUNMIiwic291cmNlcyI6WyIvVXNlcnMvZW1yYWFuLmFkZW0vRG9jdW1lbnRzL1Byb2plY3RzL05lcnZhbGEvTmVydmFsYS5maWxlcy9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2x1Y2lkZS1yZWFjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQWN0aXZpdHkgfSBmcm9tIFwiLi9pY29ucy9hY3Rpdml0eS5qc1wiXG5leHBvcnQgeyBkZWZhdWx0IGFzIEFycm93RG93biB9IGZyb20gXCIuL2ljb25zL2Fycm93LWRvd24uanNcIlxuZXhwb3J0IHsgZGVmYXVsdCBhcyBBcnJvd1VwIH0gZnJvbSBcIi4vaWNvbnMvYXJyb3ctdXAuanNcIlxuZXhwb3J0IHsgZGVmYXVsdCBhcyBDbG9jayB9IGZyb20gXCIuL2ljb25zL2Nsb2NrLmpzXCJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgWCB9IGZyb20gXCIuL2ljb25zL3guanNcIiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/__barrel_optimize__?names=Activity,ArrowDown,ArrowUp,Clock,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js\n");

/***/ })

};
;